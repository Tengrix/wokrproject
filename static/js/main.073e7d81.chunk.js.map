{"version":3,"sources":["api/api.ts","redux/auth-reducer.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Friends/Friends.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/app-reducer.tsx","App.tsx","redux/friends-reducer.tsx","redux/redux-store.ts","index.tsx","components/Header/Header.module.css","redux/profile-reducer.tsx","Pics/Iphone-spinner-2.gif","components/common/Preloader/Preloader.tsx","redux/dialog-reducer.tsx","components/Navbar/Navbar.module.css","components/utils/helper.ts","redux/users-reducer.ts"],"names":["instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageCount","get","then","response","data","getProfile","userId","console","warn","profileAPI","FollowFriends","id","post","UnFollowFriends","delete","authAPI","getAuthMe","getLogin","email","password","rememberMe","captcha","getLogOut","getCaptcha","getStatus","updateStatus","status","put","saveProfile","profile","savePhoto","img","formData","FormData","append","initialState","login","isAuth","isFetching","resultCode","messages","setAuthUserData","type","setToggleFetching","AuthMe","dispatch","a","AuthLogin","Captcha","message","length","stopSubmit","_error","AuthLogOut","url","authReducer","state","action","Navbar","className","s","nav","item","to","activeClassName","activeLink","itemFriends","News","props","Music","Settings","Friends","Header","header","src","alt","loginBlock","onClick","HeaderContainer","this","React","Component","connect","auth","isInitialized","appReducer","DialogsContainer","lazy","UsersContainer","ProfileContainer","LoginForm","App","useDispatch","useSelector","appPage","useEffect","exact","path","render","Suspense","fallback","Preloader","component","style","position","top","textAlign","width","CircularProgress","friends","name","friendsReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogPage","dialogReducer","sideBarPage","usersPage","usersReducer","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","module","exports","ADD_POST","likeCount","aboutMe","lookingForAJob","lookingForAJobDescription","fullName","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","photos","large","small","isOwner","error","addPost","posts","setStatus","setError","GetProfile","getProfileStatus","updateProfileStatus","log","saveUserProfile","getState","Promise","reject","saveUserPhoto","newPost","filter","el","value","preloader","SEND_MESSAGE","users","sendMessage","dialog","objectHelper","items","itemId","newObjProp","map","totalUsersCount","isFollowing","follow","unfollow","setCurrentPage","pageNumber","setToggleFollowing","getUser","totalCount","followUnfollow","apiMethod","actionCreator","FollowFriend","bind","UnFollowFriend","followed"],"mappings":"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","file":"static/js/main.073e7d81.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {ProfilePhotoType, ProfileType} from \"../redux/profile-reducer\";\r\nimport {UsersType} from \"../redux/users-reducer\";\r\nimport {setUserDataType} from \"../redux/auth-reducer\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials:true,\r\n    headers:{\r\n        'API-KEY': '1eaa5d66-d310-487c-a1d0-2fd59af6c2de'\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers (currentPage:number,pageCount:number) {\r\n        return  instance.get<GetUsersType>(`users?page=${currentPage}&count=${pageCount}`).then(response=> {\r\n            return response.data\r\n        })\r\n    },\r\n    getProfile (userId:number)  {\r\n        console.warn('Obsolete method. Please use profileApi object.')\r\n        return profileAPI.getProfile(userId)\r\n   },\r\n\r\n    FollowFriends(id:number){\r\n        return instance.post<CommonResponseType<{}>>(`follow/${id}`).then(response=>response.data)\r\n    },\r\n    UnFollowFriends(id:number){\r\n        return instance.delete<CommonResponseType<{}>>(`follow/${id}`).then(response=>response.data)\r\n    }\r\n}\r\nexport const authAPI = {\r\n\r\n    getAuthMe (){\r\n        return instance.get<GetAuthType>(`auth/me`).then(response=>response.data)\r\n    },\r\n    getLogin(email:string, password:string,rememberMe:boolean, captcha:string){\r\n        return instance.post<CommonResponseType<{ data: PostAuthLoginType }>>('auth/login', {email, password, rememberMe,captcha});\r\n    },\r\n    getLogOut(){\r\n        return instance.delete<CommonResponseType<{}>>('auth/login')\r\n    },\r\n    getCaptcha(){\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile (userId:number)  {\r\n        return  instance.get<ProfileType>(`profile/`+ userId)\r\n    },\r\n    getStatus (userId:number) {\r\n        return instance.get<any>(`profile/status/${userId}`)\r\n    },\r\n    updateStatus (status:string) {\r\n        return instance.put<CommonResponseType<{data:string}>>('profile/status',{status})\r\n    },\r\n    saveProfile(profile:ProfileType | null){\r\n        return instance.put<CommonResponseType<{ data:ProfilesType }>>(`profile`,profile)\r\n    },\r\n    savePhoto(img: File){\r\n        const formData = new FormData()\r\n        formData.append('image',img)\r\n        return instance.put<CommonResponseType<{photos: ProfilePhotoType }>>(`profile/photo`,formData, {\r\n            headers:{\r\n                'Content-type':'mulitpart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\ntype CommonResponseType<T> = {\r\n    data:T;\r\n    resultCode:number;\r\n    messages:string[];\r\n    fieldsErrors:string[];\r\n\r\n}\r\n\r\ntype ContactsType = {\r\n    github: string;\r\n    vk: string;\r\n    facebook: string;\r\n    instagram: string;\r\n    twitter?: string;\r\n    website?: string;\r\n    youtube?: string;\r\n    mainLink?: string;\r\n}\r\n\r\nexport type ProfilesType = {\r\n    aboutMe:string;\r\n    userId: number;\r\n    lookingForAJob: boolean;\r\n    lookingForAJobDescription: string;\r\n    fullName: string;\r\n    contacts?: ContactsType\r\n\r\n}\r\n\r\nexport type GetUsersType = {\r\n    error: string;\r\n    totalCount: number;\r\n    items: UsersType[]\r\n}\r\n\r\ntype GetAuthType = {\r\n    data:setUserDataType\r\n    resultCode: number;\r\n    messages: string[];\r\n    fieldsErrors: string[];\r\n}\r\ntype PostAuthType = {\r\n    email: string;\r\n    password:string;\r\n    rememberMe: boolean;\r\n    captcha:boolean;\r\n}\r\ntype PostAuthLoginType = {\r\n    resultCode: string;\r\n    messages: string[];\r\n    fieldsError: string[];\r\n    data: PostAuthType\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\ntype ActionsTypesF =\r\n    ReturnType<typeof setAuthUserData> |\r\n    ReturnType<typeof setToggleFetching> |\r\n    ReturnType<typeof getCaptcha>\r\n\r\nexport type setUserDataType = {\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean;\r\n}\r\nexport type setToggleFetching = {\r\n    type: 'SET-TOGGLE-FETCHING'\r\n    isFetching: boolean\r\n}\r\nexport type setUserDataTypeAT = {\r\n    type: 'SET-USER-DATA'\r\n    data: setUserDataType\r\n}\r\nexport type getCaptchaType = {\r\n    type: 'GET-CAPTCHA'\r\n    url: string\r\n}\r\n\r\nexport type AuthInitialStateType = {\r\n    data: setUserDataType\r\n    isFetching: boolean;\r\n    resultCode: number;\r\n    messages: string[];\r\n    captcha: string;\r\n}\r\nlet initialState: AuthInitialStateType = {\r\n    data: {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth: false\r\n    },\r\n    isFetching: false,\r\n    resultCode: 0,\r\n    messages: [''],\r\n    captcha: ''\r\n}\r\n\r\nexport const authReducer = (state: AuthInitialStateType = initialState, action: ActionsTypesF): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.data\r\n            }\r\n        case \"SET-TOGGLE-FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"GET-CAPTCHA\":\r\n            return {\r\n                ...state, captcha: action.url\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean): setUserDataTypeAT => {\r\n    return {\r\n        type: 'SET-USER-DATA',\r\n        data: {id, email, login, isAuth}\r\n    } as const\r\n}\r\nexport const setToggleFetching = (isFetching: boolean): setToggleFetching => {\r\n    return {\r\n        type: \"SET-TOGGLE-FETCHING\",\r\n        isFetching\r\n    } as const\r\n}\r\nexport const getCaptcha = (url: string): getCaptchaType => {\r\n    return {\r\n        type: \"GET-CAPTCHA\",\r\n        url\r\n    } as const\r\n}\r\n\r\nexport const AuthMe = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        const response = await authAPI.getAuthMe()\r\n        dispatch(setToggleFetching(false))\r\n        if (response.resultCode === 0) {\r\n            let {id, login, email} = response.data\r\n            dispatch(setAuthUserData(id, login, email, true))\r\n            dispatch(setToggleFetching(true))\r\n        }\r\n    }\r\n}\r\nexport const AuthLogin = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: ThunkDispatch<any, any, any>) => {\r\n    const response = await authAPI.getLogin(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(AuthMe())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(Captcha())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n            dispatch(stopSubmit('login',\r\n                {_error: message}))\r\n        }\r\n\r\n    }\r\n}\r\nexport const AuthLogOut = () => async (dispatch: Dispatch) => {\r\n    const response = await authAPI.getLogOut()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n        dispatch(setToggleFetching(true))\r\n    }\r\n}\r\nexport const Captcha = () => async (dispatch: Dispatch) => {\r\n    const response = await authAPI.getCaptcha()\r\n    if (response.status === 200) {\r\n        dispatch(getCaptcha(response.data.url))\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css';\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={`${s.item}`}>\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\n            </div>\n            <div className={s.itemFriends}>\n                <NavLink to='/friends' activeClassName={s.activeLink}>Friends</NavLink>\n            </div>\n            <span className={s.itemFriends}>\n                <NavLink to='/Abay' activeClassName={s.activeLink}> Aboy </NavLink>\n            </span>\n\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react'\r\nimport s from './News.module.css'\r\nfunction News(props:any){\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News","import React from 'react'\r\nfunction Music(props:any){\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from 'react'\r\nimport s from './Settings.module.css'\r\nfunction Settings(props:any){\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from 'react'\r\nfunction Friends(){\r\n    return (\r\n        <div>\r\n            Friends\r\n        </div>\r\n    )\r\n}\r\nexport default Friends","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css';\nimport {HeaderContainerTypeProps} from \"./HeaderContainer\";\n\nfunction Header(props:HeaderContainerTypeProps) {\n  return (\n    <header className={s.header}>\n      <img src=\"https://www.freelogodesign.org/Content/img/logo-ex-7.png\" alt=\"\"/>\n        <div className={s.loginBlock}>\n            {props.isAuth ?\n                <div>{props.login} - <button onClick={props.AuthLogOut}> Log out</button></div>\n          : <NavLink to={'/login'}>Login</NavLink>}\n        </div>\n    </header>\n  );\n}\nexport default Header;\n","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    AuthLogOut,\r\n    AuthMe,\r\n    setAuthUserData,\r\n    setToggleFetching,\r\n    setUserDataType\r\n} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype mapDispatchToProps = {\r\n    setAuthUserData: (data: setUserDataType) => void;\r\n    setToggleFetching: (isFetching: boolean) => void;\r\n    AuthMe:() => void;\r\n    AuthLogOut:() => number;\r\n}\r\nexport type HeaderContainerTypeProps = mapStateToPropsType & mapDispatchToProps\r\nclass HeaderContainer extends React.Component<any, any>{\r\n    componentDidMount() {\r\n        this.props.AuthMe()\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}\r\n                       login={this.props.login}\r\n                       isAuth={this.props.isAuth}\r\n                       setAuthUserData={this.props.setAuthUserData}\r\n                       setToggleFetching={this.props.setToggleFetching}\r\n                       AuthMe={this.props.AuthMe}\r\n                       AuthLogOut={this.props.AuthLogOut}\r\n        />\r\n    }\r\n}\r\nlet mapStateToProps = (state:AppStateType): mapStateToPropsType => {\r\n    return{\r\n        isAuth: state.auth.data.isAuth,\r\n        login: state.auth.data.login,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{setAuthUserData,setToggleFetching,AuthMe,AuthLogOut}) (HeaderContainer)","import {AuthMe} from \"./auth-reducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\ntype initialStateType = {\r\n    isInitialized: boolean\r\n}\r\ntype ActionType = ReturnType<typeof isInitializedAc>\r\nconst initialState: initialStateType = {\r\n    isInitialized: false\r\n}\r\nexport const appReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case'IS-INITIALIZED': {\r\n            return {...state, isInitialized: true}\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport const isInitializedAc = () => ({type: 'IS-INITIALIZED'} as const)\r\nexport const initializeAppTC = () => async (dispatch: ThunkDispatch<any, any, any>) => {\r\n    try {\r\n        await dispatch(AuthMe())\r\n        dispatch(isInitializedAc())\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default appReducer;","import React, {useEffect} from 'react';\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport './App.css';\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Friends from \"./components/Friends/Friends\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n// import UsersContainer from \"./components/Users/UsersContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\n// import LoginForm from \"./components/Login/LoginForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"./redux/redux-store\";\r\nimport {initializeAppTC} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"))\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\r\nconst LoginForm = React.lazy(() => import(\"./components/Login/LoginForm\"))\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppStateType, boolean>(state => state.appPage.isInitialized)\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [])\r\n\r\n    if (!isInitialized) {\r\n        return <div\r\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\r\n            <CircularProgress/>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={'app-wrapper-content'}>\r\n                <Switch>\r\n                    <Route exact path='/' render={() => {\r\n                        return <Redirect to={'/profile'}/>\r\n                    }}/>\r\n                    <React.Suspense fallback={<Preloader/>}>\r\n                        <Route path='/dialogs' render={() => {\r\n                            return <DialogsContainer/>\r\n                        }}/>\r\n                        <Route path='/profile/:userId?' render={() => {\r\n                            return <ProfileContainer/>\r\n                        }}/>\r\n                        <Route path='/users' render={() => {\r\n                            return <UsersContainer/>\r\n                        }}/>\r\n                        <Route path='/login' render={() => {\r\n                            return <LoginForm/>\r\n                        }}/>\r\n                        {/*<Route path='*' render={() => {*/}\r\n                        {/*    return <div>404 NOT FOUND</div>*/}\r\n                        {/*}}/>*/}\r\n                    </React.Suspense>\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/music' component={Music}/>\r\n                    <Route path='/settings' component={Settings}/>\r\n                    <Route path='/friends' render={() => <Friends/>}/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","type ActionsTypesF = {\r\n\r\n}\r\ntype sidebarType = {\r\n    id: number;\r\n    name: string;\r\n}\r\nexport type InitialStateType = {\r\n    friends: sidebarType[]\r\n}\r\nlet initialState: InitialStateType = {\r\n    friends: [\r\n        {id: 1, name: 'Abay'},\r\n        {id: 2, name: 'Karik'}\r\n    ]\r\n}\r\n\r\nexport const friendsReducer = (state:InitialStateType = initialState, action:ActionsTypesF): InitialStateType => {\r\n\r\n    return state\r\n}\r\nexport default friendsReducer","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\ndeclare global {\r\n    interface Window {store: any}\r\n}\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogReducer,\r\n    sideBarPage: friendsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    appPage:appReducer,\r\n})\r\n\r\nexport type AppStateType =ReturnType<typeof rootReducer>\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\r\nwindow.store = window.store || {}\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3kPns\",\"loginBlock\":\"Header_loginBlock__2AcFW\"};","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {setToggleFetching} from \"./auth-reducer\";\r\n\r\ntype ActionsTypesF =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof setProfile> |\r\n    ReturnType<typeof setStatus> |\r\n    ReturnType<typeof deletePost> |\r\n    ReturnType<typeof isOwner> |\r\n    ReturnType<typeof successSavePhoto> |\r\n    ReturnType<typeof setError>\r\nexport const ADD_POST = 'ADD-POST'\r\n\r\nexport type messageType = {\r\n    message: string;\r\n    likeCount: number;\r\n    id: number;\r\n}\r\n\r\nexport type ProfilePhotoType = {\r\n    small: string\r\n    large: string\r\n}\r\ntype isOwnerType = {\r\n    type: 'IS-OWNER'\r\n    value: boolean;\r\n}\r\ntype DelPostType = {\r\n    type: 'DEL-POST'\r\n    id: number;\r\n}\r\ntype addPostType = {\r\n    type: 'ADD-POST'\r\n    posts: string\r\n}\r\ntype setProfile = {\r\n    type: 'SET-PROFILE'\r\n    profile: ProfileType\r\n}\r\ntype setStatus = {\r\n    type: 'SET-STATUS'\r\n    status: string\r\n}\r\ntype IsProfileSetType = {\r\n    type: 'IS-SET'\r\n    isSet: boolean\r\n}\r\ntype savePhotoType = {\r\n    type: 'SAVE-PHOTO'\r\n    photos: ProfilePhotoType;\r\n}\r\ntype setErrorType = {\r\n    type: 'SET-ERROR'\r\n    error: string;\r\n}\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    userId: number;\r\n    lookingForAJob: boolean;\r\n    lookingForAJobDescription: string;\r\n    fullName: string;\r\n    contacts: {\r\n        github: string;\r\n        vk: string;\r\n        facebook: string;\r\n        instagram: string;\r\n        twitter: string;\r\n        website: string;\r\n        youtube: string;\r\n        mainLink: string;\r\n    }\r\n    photos: ProfilePhotoType;\r\n}\r\n\r\nexport type InitialStateType = {\r\n    message: messageType[];\r\n    profile: ProfileType;\r\n    status: string;\r\n    isOwner: boolean;\r\n    error: string;\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    message: [\r\n        {id: 1, message: 'Hi, how are you?', likeCount: 22},\r\n        {id: 2, message: 'It is my first post', likeCount: 11},\r\n\r\n    ] as messageType[],\r\n    profile: {\r\n        aboutMe: '',\r\n        userId: 16786,\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: '',\r\n        fullName: 'Uakhit Damir',\r\n        contacts: {\r\n            github: '',\r\n            vk: '',\r\n            facebook: '',\r\n            instagram: 'damir.gst',\r\n            twitter: '',\r\n            website: '',\r\n            youtube: '',\r\n            mainLink: '',\r\n        },\r\n        photos: {\r\n            large: '',\r\n            small: ''\r\n        }\r\n    },\r\n    isOwner: false,\r\n    status: '',\r\n    error: '',\r\n}\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsTypesF): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            const newPost: messageType = {\r\n                id: 3,\r\n                message: action.posts,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                message: [...state.message, newPost],\r\n            };\r\n        }\r\n        case \"SET-PROFILE\":\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case \"SET-STATUS\":\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        case \"DEL-POST\":\r\n            return {\r\n                ...state, message: state.message.filter(el => el.id !== action.id)\r\n            }\r\n        case \"IS-OWNER\":\r\n            return {\r\n                ...state, isOwner: action.value\r\n            }\r\n        case \"SAVE-PHOTO\":\r\n            debugger\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            }\r\n        case \"SET-ERROR\":\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPost = (posts: string): addPostType => {\r\n    return {\r\n        type: ADD_POST,\r\n        posts\r\n    } as const\r\n}\r\nexport const setProfile = (profile: ProfileType): setProfile => {\r\n    return {\r\n        type: 'SET-PROFILE',\r\n        profile\r\n    } as const\r\n}\r\nexport const setStatus = (status: string): setStatus => {\r\n    return {\r\n        type: 'SET-STATUS',\r\n        status\r\n    } as const\r\n}\r\nexport const deletePost = (id: number): DelPostType => {\r\n    return {\r\n        type: 'DEL-POST',\r\n        id\r\n    } as const\r\n}\r\nexport const isOwner = (value: boolean): isOwnerType => {\r\n    return {\r\n        type: 'IS-OWNER',\r\n        value\r\n    } as const\r\n}\r\nexport const successSavePhoto = (photos: ProfilePhotoType): savePhotoType => {\r\n    return {\r\n        type: 'SAVE-PHOTO',\r\n        photos\r\n    } as const\r\n}\r\nexport const setError = (error: string): setErrorType => {\r\n    return {\r\n        type: 'SET-ERROR',\r\n        error\r\n    } as const\r\n}\r\n\r\nexport const GetProfile = (userId: number) => {\r\n    return async (dispatch: ThunkDispatch<any, any, any>) => {\r\n        dispatch(setToggleFetching(false))\r\n        try {\r\n            const response = await profileAPI.getProfile(userId)\r\n            dispatch(setProfile(response.data))\r\n            dispatch(setToggleFetching(true))\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n}\r\nexport const getProfileStatus = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        const response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data))\r\n    }\r\n}\r\nexport const updateProfileStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    } else {\r\n        console.log(response.data.messages[0])\r\n    }\r\n}\r\nexport const saveUserProfile = (profile: ProfileType) => async (dispatch: ThunkDispatch<any, any, any>, getState: () => AppStateType) => {\r\n\r\n    let userId = getState().auth.data.id\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        if (userId != null) {\r\n            await dispatch(GetProfile(userId))\r\n        }\r\n    } else {\r\n        dispatch(setError(response.data.messages[0]))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\nexport const saveUserPhoto = (img: File) => async (dispatch: Dispatch) => {\r\n\r\n    const response = await profileAPI.savePhoto(img)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(successSavePhoto(response.data.data.photos))\r\n    }\r\n}\r\nexport default profileReducer","export default __webpack_public_path__ + \"static/media/Iphone-spinner-2.d3fbaf2b.gif\";","import React from \"react\";\r\n\r\nimport preloader from './../../../Pics/Iphone-spinner-2.gif'\r\n\r\n\r\nconst Preloader = () =>{\r\n    return <div>\r\n        <img src={preloader} alt=\"\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","type ActionsTypesF = ReturnType<typeof sendMessage>\r\n\r\nexport const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nexport type messagesType = {\r\n    id: number;\r\n    messages: string;\r\n}\r\nexport type userType = {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\n\r\nexport type InitialStateType = {\r\n    users: userType[]\r\n    messages: messagesType[]\r\n}\r\nlet initialState: InitialStateType = {\r\n    users: [\r\n        {id: '1', name: 'Damir'},\r\n        {id: '2', name: 'Abay'},\r\n        {id: '3', name: 'Kyama'},\r\n        {id: '4', name: 'Kaidar'},\r\n        {id: '5', name: 'Aday'},\r\n\r\n    ] as userType[],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'What\\'s up?'},\r\n        {id: 3, messages: 'How\\'s it going?'},\r\n\r\n    ] as messagesType[]\r\n}\r\n\r\nexport const dialogReducer = (state: InitialStateType = initialState, action: ActionsTypesF):InitialStateType => {\r\n    switch (action.type){\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id:6, messages: action.dialog} ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const sendMessage = (dialog:string) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        dialog\r\n    } as const\r\n\r\n}\r\n\r\nexport default dialogReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2LvmE\",\"item\":\"Navbar_item__3Z4YA\",\"activeLink\":\"Navbar_activeLink__E3EjW\",\"itemFriends\":\"Navbar_itemFriends__ukrFy\"};","import {UsersType} from \"../../redux/users-reducer\";\r\n\r\nexport const objectHelper = (items: UsersType[],itemId:number, newObjProp: { followed: boolean }) => {\r\n    return  items.map(el => el.id === itemId ? {...el, ...newObjProp} : el)\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {objectHelper} from \"../components/utils/helper\";\r\n\r\ntype ActionsTypesF =\r\n    ReturnType<typeof follow> |\r\n    ReturnType<typeof unfollow> |\r\n    ReturnType<typeof setUser> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof setToggleFetching> |\r\n    ReturnType<typeof setToggleFollowing>\r\n\r\nexport type UsersPhotoType = {\r\n    small: string;\r\n    large: string;\r\n}\r\n\r\nexport type UsersType = {\r\n    id: number;\r\n    photoUrl: string\r\n    name: string;\r\n    status: string\r\n    followed: boolean\r\n    photos: UsersPhotoType;\r\n}\r\nexport type InitialStateType = {\r\n    users: UsersType[]\r\n    pageCount: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    isFollowing: number[]\r\n}\r\nexport type followAT = {\r\n    type: 'FOLLOW'\r\n    userId: number\r\n}\r\nexport type unfollowAT = {\r\n    type: 'UNFOLLOW'\r\n    userId: number\r\n}\r\nexport type followUnfollow = followAT | unfollowAT\r\nexport type setUserAT = {\r\n    type: 'SET-USERS'\r\n    users: UsersType[]\r\n}\r\nexport type setPageAT = {\r\n    type: 'SET-PAGE'\r\n    pageNumber: number\r\n}\r\nexport type setTotalUsersCountAT = {\r\n    type: 'SET-TOTAL-USERS'\r\n    totalUsersCount: number\r\n}\r\nexport type setToggleFetching = {\r\n    type: 'SET-TOGGLE-FETCHING'\r\n    isFetching: boolean\r\n}\r\nexport type setToggleFollowing = {\r\n    type: 'SET-TOGGLE-FOLLOWING'\r\n    id: number\r\n    isFetching: boolean;\r\n}\r\nlet initialState: InitialStateType = {\r\n    users: [] as UsersType[],\r\n    pageCount: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowing: []\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypesF): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: objectHelper(state.users, action.userId,{followed:true})\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: objectHelper(state.users, action.userId,{followed:false})\r\n            }\r\n        case \"SET-USERS\":\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case 'SET-PAGE':\r\n            return {\r\n                ...state, currentPage: action.pageNumber\r\n            }\r\n        case \"SET-TOTAL-USERS\":\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n        case \"SET-TOGGLE-FETCHING\":\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case \"SET-TOGGLE-FOLLOWING\":\r\n            return {\r\n                ...state,\r\n                isFollowing: action.isFetching ? [...state.isFollowing, action.id] :\r\n                    state.isFollowing.filter(el => el != action.id)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const follow = (userId: number): followAT => {\r\n    return {\r\n        type: 'FOLLOW',\r\n        userId\r\n    } as const\r\n}\r\nexport const unfollow = (userId: number): unfollowAT => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userId\r\n    } as const\r\n}\r\nexport const setUser = (users: UsersType[]): setUserAT => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        users\r\n    } as const\r\n}\r\nexport const setCurrentPage = (pageNumber: number): setPageAT => {\r\n    return {\r\n        type: 'SET-PAGE',\r\n        pageNumber\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number): setTotalUsersCountAT => {\r\n    return {\r\n        type: 'SET-TOTAL-USERS',\r\n        totalUsersCount\r\n    } as const\r\n}\r\nexport const setToggleFetching = (isFetching: boolean): setToggleFetching => {\r\n    return {\r\n        type: \"SET-TOGGLE-FETCHING\",\r\n        isFetching\r\n    } as const\r\n}\r\nexport const setToggleFollowing = (isFetching: boolean, id: number): setToggleFollowing => {\r\n    return {\r\n        type: 'SET-TOGGLE-FOLLOWING',\r\n        id,\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport const getUser = (currentPage: number, pageCount: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(setToggleFetching(true));\r\n            dispatch(setCurrentPage(currentPage))\r\n            const response = await usersAPI.getUsers(currentPage, pageCount)\r\n            dispatch(setToggleFetching(false))\r\n            dispatch(setUser(response.items))\r\n            dispatch(setTotalUsersCount(response.totalCount))\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst followUnfollow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: (userId: number) => followUnfollow) => {\r\n    dispatch(setToggleFollowing(true, userId))\r\n    const response = await apiMethod(userId)\r\n    if (response.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setToggleFollowing(false, userId))\r\n}\r\n\r\nexport const FollowFriend = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            await followUnfollow(dispatch, userId, usersAPI.FollowFriends.bind(usersAPI), follow)\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport const UnFollowFriend = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            await followUnfollow(dispatch, userId, usersAPI.UnFollowFriends.bind(usersAPI), unfollow)\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n}\r\nexport default usersReducer"],"sourceRoot":""}