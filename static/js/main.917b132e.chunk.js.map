{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItems/DialogItems.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","redux/state.tsx","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Friends/Friends.tsx","App.tsx","index.tsx"],"names":["module","exports","rerenderEntireTree","state","profilePage","message","id","likeCount","newPostText","dialogsPage","users","name","messages","sidebar","friends","addNewPost","post","newPost","push","changeNewPostCallBack","Header","className","s","header","src","alt","Navbar","nav","item","active","to","activeClassName","activeLink","itemFriends","Post","props","like","MyPosts","messageData","map","el","postsBLock","value","onChange","e","currentTarget","onClick","posts","ProfileInfo","pic","descriptionBlock","Profile","DialogItems","dialog","img","Message","React","createRef","chat","ref","alert","current","Dialogs","usersData","messagesData","dialogs","dialogsItems","News","Music","Settings","Friends","App","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.917b132e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3dKQv\",\"item\":\"Navbar_item__2oB40\",\"activeLink\":\"Navbar_activeLink__2zl4L\",\"itemFriends\":\"Navbar_itemFriends__XZia7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2-Sg2\",\"messages\":\"Dialogs_messages__bRGYr\",\"message\":\"Dialogs_message__3VBPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItems_dialogsItems__1-icN\",\"active\":\"DialogItems_active__1YM7J\",\"img\":\"DialogItems_img__3mM_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBLock\":\"MyPosts_postsBLock__21aF9\",\"posts\":\"MyPosts_posts__1Xedv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Al15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Cx6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2y6KL\"};","\r\nlet rerenderEntireTree = () => {\r\n\r\n}\r\n\r\nexport type messageType = {\r\n    message: string;\r\n    likeCount: number;\r\n    id: number\r\n}\r\nexport type userType = {\r\n    id: string;\r\n    name: string;\r\n}\r\nexport type messagesType = {\r\n    id: number;\r\n    messages: string;\r\n}\r\nexport type sidebarType = {\r\n    id:number;\r\n    name:string;\r\n}\r\nexport type profilePageType = {\r\n    message: messageType[],\r\n    newPostText:string;\r\n}\r\nexport type dialogsPageType = {\r\n    users: userType[]\r\n    messages: messagesType[]\r\n}\r\nexport type sidebarsType = {\r\n    friends:sidebarType[]\r\n}\r\n\r\nexport type stateRootType = {\r\n    profilePage: profilePageType\r\n    dialogsPage: dialogsPageType\r\n    sidebar: sidebarsType\r\n}\r\n\r\nexport let state: stateRootType = {\r\n    profilePage: {\r\n        message: [\r\n            {id: 1, message: 'Hi, how are you?', likeCount: 22},\r\n            {id: 2, message: 'It is my first post', likeCount: 11},\r\n\r\n        ],\r\n        newPostText:''\r\n    },\r\n    dialogsPage: {\r\n        users: [\r\n            {id: '1', name: 'Damir'},\r\n            {id: '2', name: 'Abay'},\r\n            {id: '3', name: 'Kyama'},\r\n            {id: '4', name: 'Kaidar'},\r\n            {id: '5', name: 'Aday'},\r\n\r\n        ],\r\n        messages: [\r\n            {id: 1, messages: 'Hi'},\r\n            {id: 2, messages: 'What\\'s up?'},\r\n            {id: 3, messages: 'How\\'s it going?'},\r\n\r\n        ]\r\n    },\r\n    sidebar: {\r\n        friends: [\r\n            {id:1, name:'Abay'},\r\n            {id:2, name:'Salta'},\r\n            {id:3, name:'Samal'}\r\n        ]\r\n    }\r\n}\r\n\r\nexport const addNewPost = (post:string) => {\r\n    const newPost:messageType = {\r\n        id:3,\r\n        message:post,\r\n        likeCount:0\r\n    };\r\n    state.profilePage.message.push(newPost)\r\n    state.profilePage.newPostText=''\r\n    rerenderEntireTree()\r\n}\r\nexport const changeNewPostCallBack = (newPost:string) => {\r\n    state.profilePage.newPostText=newPost\r\n    rerenderEntireTree()\r\n}\r\n\r\nexport const subscribe = (observer:()=> void) => {\r\n    rerenderEntireTree = observer\r\n}\r\n\r\nexport default state;","import React from 'react';\n\nimport s from './Header.module.css';\n\nfunction Header() {\n  return (\n    <header className={s.header}>\n      <img src=\"https://www.freelogodesign.org/Content/img/logo-ex-7.png\" alt=\"\"/>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css';\n\ntype NavbarType = {\n\n}\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\n            </div>\n            <div className={s.itemFriends}>\n                <NavLink to='/friends' activeClassName={s.activeLink}>Friends</NavLink>\n            </div>\n            <span className={s.itemFriends}>\n                <NavLink to='/Abay' activeClassName={s.activeLink}> Abay </NavLink>\n            </span>\n            <span className={s.itemFriends}>\n                <NavLink to='/Salta' activeClassName={s.activeLink}> Salta </NavLink>\n            </span>\n            <span className={s.itemFriends}>\n                <NavLink to='/Samal' activeClassName={s.activeLink}> Samal </NavLink>\n            </span>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nimport s from './Post.module.css';\n\ntype PostPropsType={\n    message: string\n    like:number\n}\n\nfunction Post(props:PostPropsType) {\n    return (\n        <div >\n            <div className={s.item}>\n                <img src=\"https://lwlies.com/wp-content/uploads/2017/04/avatar-2009.jpg\" alt=\"\"/>\n                {props.message}\n                <div>\n                    <span>\n                        {props.like}\n                        <button>like</button>\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;\n","import React, {ChangeEvent, ChangeEventHandler} from 'react';\n\nimport s from './MyPosts.module.css';\nimport Posts from \"./Post/Post\";\nimport {messageType} from \"../../../redux/state\";\n\n\ntype stateMyPostsType = {\n    message: messageType[]\n    addNewPost: (post: string) => void;\n    newPostText:string;\n    changeNewPostCallBack: (newPost: string) => void;\n}\n\nfunction MyPosts(props: stateMyPostsType) {\n\n    let messageData = props.message.map(el => <Posts  message={el.message} like={el.likeCount}/>)\n    let addPost = () => {\n            props.addNewPost(props.newPostText)\n        }\n    let addPostChange = (e:ChangeEvent<HTMLTextAreaElement>) => {\n        props.changeNewPostCallBack(e.currentTarget.value)\n    }\n    return (\n        <div className={s.postsBLock}>\n            <h3>My posts</h3>\n            <div>\n                <div>\n                    <textarea value={props.newPostText} onChange={addPostChange}></textarea>\n                </div>\n                <div>\n                    <button onClick={addPost}>add new post</button>\n                </div>\n            </div>\n            <div className={s.posts}>\n\n                {messageData}\n\n            </div>\n        </div>\n    );\n}\n\nexport default MyPosts;\n","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\ntype ProfileInfoType = {\r\n    pic:string;\r\n}\r\n\r\nfunction ProfileInfo(props:ProfileInfoType){\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src={props.pic}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import React from 'react';\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport {messageType} from \"../../redux/state\";\n\ntype stateProfileType ={\n    message:messageType[]\n    newPostText:string;\n    addNewPost:(post:string) => void;\n    changeNewPostCallBack:(newPost:string) => void;\n\n}\nfunction Profile(props:stateProfileType) {\n    return (\n        <div>\n            <ProfileInfo pic={'https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'}/>\n            <MyPosts message={props.message}\n                     addNewPost={props.addNewPost}\n                     newPostText={props.newPostText}\n                     changeNewPostCallBack={props.changeNewPostCallBack}/>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from \"./DialogItems.module.css\";\r\n\r\ntype DialogItemsTypes = {\r\n    name:string\r\n    id:string\r\n}\r\n\r\nfunction DialogItems(props:DialogItemsTypes) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={`${s.dialog} ${s.active}`}>\r\n                <img className={s.img} src=\"https://media.vanityfair.com/photos/5c5325d3cec32271820c6fc1/master/w_1600%2Cc_limit/ava-max-interview.jpg\" alt=\"\"/>\r\n                <NavLink to={'/dialogs/'+props.id}>{props.name}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItems","import React, {ChangeEvent, LegacyRef} from 'react'\r\nimport s from \"./Message.module.css\";\r\n\r\ntype setMessageType = {\r\n    messages: string;\r\n    id: number;\r\n}\r\n\r\nfunction Message(props: setMessageType) {\r\n    let newPost = React.createRef<HTMLTextAreaElement>();\r\n    let addPost = () => {\r\n        alert(newPost.current?.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.message}>\r\n                <div className={s.chat}>\r\n                    {props.messages}\r\n                </div>\r\n                <textarea ref={newPost}></textarea>\r\n                <button onClick={addPost}>add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItems from \"./DialogItems/DialogItems\";\r\nimport Message from \"./Message/Message\";\r\nimport { messagesType, userType} from '../../redux/state'\r\n\r\ntype stateDialogsType = {\r\n    users:userType[]\r\n    messages:messagesType[]\r\n}\r\n\r\nfunction Dialogs(props:stateDialogsType) {\r\n\r\n    let usersData = props.users.map(el=><DialogItems name={el.name} id={el.id}/>)\r\n    let messagesData = props.messages.map(el=> <Message messages={el.messages} id={el.id}/>)\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {usersData}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                {messagesData}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport s from './News.module.css'\r\nfunction News(props:any){\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News","import React from 'react'\r\nimport s from './Music.module.css'\r\nfunction Music(props:any){\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from 'react'\r\nimport s from './Settings.module.css'\r\nfunction Settings(props:any){\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from 'react'\r\nimport s from './Friends.module.css'\r\nfunction Friends(props:any){\r\n    return (\r\n        <div>\r\n            Friends\r\n        </div>\r\n    )\r\n}\r\nexport default Friends","import React, {RefObject} from 'react';\nimport Header from './components/Header/Header'\nimport Navbar from './components/Navbar/Navbar'\nimport Profile from './components/Profile/Profile'\nimport './App.css';\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport {stateRootType} from './redux/state'\nimport Friends from \"./components/Friends/Friends\";\n\ntype appState = {\n    state:stateRootType;\n    addNewPost:(post:string) => void;\n    changeNewPostCallBack:(newPost:string) => void;\n}\n\nfunction App(props:appState) {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <Route path='/dialogs' render={()=><Dialogs users={props.state.dialogsPage.users}\n                                                                messages={props.state.dialogsPage.messages}\n                    />}/>\n                    <Route path='/profile' render={()=><Profile message={props.state.profilePage.message}\n                                                                addNewPost={props.addNewPost}\n                                                                newPostText={props.state.profilePage.newPostText}\n                                                                changeNewPostCallBack={props.changeNewPostCallBack}\n                    />}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/friends' render={()=><Friends/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import state, {subscribe} from './redux/state'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {addNewPost, changeNewPostCallBack, stateRootType} from \"./redux/state\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nexport let rerenderEntireTree = () =>{\n    ReactDOM.render(\n        <BrowserRouter>\n            <App state={state}\n                 addNewPost={addNewPost}\n                 changeNewPostCallBack={changeNewPostCallBack}\n            />\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n}\nrerenderEntireTree();\nsubscribe(rerenderEntireTree)\n\n"],"sourceRoot":""}