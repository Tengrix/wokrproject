{"version":3,"sources":["components/common/FormController/FormControl.module.css","components/common/FormController/FormController.tsx","components/utils/validators/validator.ts","hoc/WithAuthRedirectComponent.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItems/DialogItems.module.css","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","TextArea","input","meta","props","TextAreaError","touched","error","className","s","formControl","InputArea","requiredField","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","data","withAuthRedirectComponent","Component","connect","restProps","to","DialogItems","active","img","src","alt","id","name","Message","messages","MessagesReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","type","placeholder","validate","Dialogs","dialogPage","usersData","users","map","el","messagesData","dialogs","sendMessage","dialog","compose","withRouter"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,iBAAmB,wC,yJCC1GC,EAAW,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAASC,EAAe,gCAC/CC,EAAgBF,EAAKG,SAAWH,EAAKI,MAC3C,OACI,sBAAKC,UAAWC,IAAEC,YAAc,IAAML,EAAeI,IAAEF,MAAM,IAA7D,UACI,8BACI,oDAAcL,GAAUE,MAE3BC,GAAiB,qCAAQF,EAAKI,MAAb,WAIjBI,EAAY,SAAC,GAAiC,IAAhCT,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAASC,EAAe,gCAChDC,EAAgBF,EAAKG,SAAWH,EAAKI,MAC3C,OACI,sBAAKC,UAAWC,IAAEC,YAAc,IAAML,EAAeI,IAAEF,MAAM,IAA7D,UACI,iDAAWL,GAAWE,IACrBC,GAAiB,uBAAMG,UAAWC,IAAEF,MAAnB,cAA4BJ,EAAKI,MAAjC,Y,iCCjB9B,oEAAO,IAAMK,EAAgB,SAACC,GAC1B,IAAGA,EACH,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAsB,SAACF,GACnD,GAAGA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oHCE7BE,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKC,KAAKF,SAGzB,SAASG,EAA8BC,GAO1C,OAAOC,YAAQP,EAARO,EANmB,SAACpB,GACvB,IAAKe,EAAwBf,EAAxBe,OAAWM,EAAhB,YAA6BrB,EAA7B,YACA,OAAIe,EACG,cAACI,EAAD,eAAeE,IADH,cAAC,IAAD,CAAUC,GAAG,e,oBChBxC3B,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,2B,oBCApGD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,OAAS,4BAA4B,IAAM,2B,sHCqB/F2B,MAbf,SAAqBvB,GAEjB,OACI,8BACI,sBAAKI,UAAS,UAAKC,IAAEmB,QAArB,UACI,qBAAKpB,UAAWC,IAAEoB,IAAKC,IAAI,6GAA6GC,IAAI,KAC5I,cAAC,IAAD,CAASL,GAAI,YAAYtB,EAAM4B,GAA/B,SAAoC5B,EAAM6B,aCK3CC,MAZf,SAAiB9B,GACb,OACI,8BACI,8BACI,8BACKA,EAAM+B,gB,oCCJvBpB,EAAYD,YAAiB,IAmCjC,IAiBasB,EAAoBC,YAAkB,CAACC,KAAM,UAAzBD,EAjB6B,SAACjC,GAE3D,OACI,uBAAMmC,SAAUnC,EAAMoC,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWzC,IAAUgC,KAAM,SAAUU,KAAM,OAAQC,YAAa,qBAChEC,SAAU,CAACjC,IAAeG,OAGrC,8BACI,oDAQD+B,EApDf,SAAiB1C,GACb,IAAIc,EAAQd,EAAM2C,WAEdC,EAAY9B,EAAM+B,MAAMC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAElClB,KAAMkB,EAAGlB,KACTD,GAAImB,EAAGnB,IAFFmB,EAAGnB,OAIRoB,EAAelC,EAAMiB,SAASe,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAExChB,SAAUgB,EAAGhB,SACbH,GAAImB,EAAGnB,IAFFmB,EAAGnB,OAOZ,OACI,sBAAKxB,UAAWC,IAAE4C,QAAlB,UACI,8BAEKL,IAGL,sBAAKxC,UAAWC,IAAE0B,SAAlB,UAEI,oCAAOiB,KACP,8BACI,cAAChB,EAAD,CAAmBG,SAdX,SAAC1B,GACrBT,EAAMkD,YAAYzC,EAAM0C,oB,wBCAjBC,4BAA6BhC,aAJtB,SAACN,GAAD,MAA+C,CACjE6B,WAAW7B,EAAM6B,cAIb,CAACO,kBACLG,IAAWnC,IAFAkC,CAE2BV","file":"static/js/6.39aba75d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__3bI51\",\"error\":\"FormControl_error__2p-ba\",\"formSummaryError\":\"FormControl_formSummaryError__2aYFp\"};","import React from 'react'\r\nimport s from './FormControl.module.css'\r\nexport const TextArea = ({input, meta, ...props}:any) => {\r\n    const TextAreaError = meta.touched && meta.error\r\n    return(\r\n        <div className={s.formControl + '' + (TextAreaError? s.error:'')}>\r\n            <div >\r\n                <textarea {...input}{...props} />\r\n            </div>\r\n            {TextAreaError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\nexport const InputArea = ({input, meta, ...props}:any) => {\r\n    const TextAreaError = meta.touched && meta.error\r\n    return(\r\n        <div className={s.formControl + '' + (TextAreaError? s.error:'')}>\r\n            <input {...input} {...props}/>\r\n            {TextAreaError && <span className={s.error}> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}","\r\nexport const requiredField = (value:any) => {\r\n    if(value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength:number) => (value:any) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n}\r\n","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStateToPropsType2 = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state:AppStateType) :MapStateToPropsType2 =>{\r\n    return {\r\n        isAuth: state.auth.data.isAuth\r\n    }\r\n}\r\nexport function withAuthRedirectComponent <T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props:MapStateToPropsType2) => {\r\n        let {isAuth, ...restProps} = props\r\n        if(!isAuth) return <Redirect to='login'/>\r\n        return <Component {...restProps as T} />\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__IcOa7\",\"messages\":\"Dialogs_messages__2ipxb\",\"message\":\"Dialogs_message__2cCpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItems_dialogsItems__2fZHv\",\"active\":\"DialogItems_active__2ISGM\",\"img\":\"DialogItems_img__3cAL3\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from \"./DialogItems.module.css\";\r\n\r\ntype DialogItemsTypes = {\r\n    name:string\r\n    id:string\r\n}\r\n\r\nfunction DialogItems(props:DialogItemsTypes) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={`${s.active}`}>\r\n                <img className={s.img} src=\"https://media.vanityfair.com/photos/5c5325d3cec32271820c6fc1/master/w_1600%2Cc_limit/ava-max-interview.jpg\" alt=\"\"/>\r\n                <NavLink to={'/dialogs/'+props.id}>{props.name}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItems","import React from 'react'\r\nimport s from \"./Message.module.css\";\r\n\r\ntype setMessageType = {\r\n    messages: string;\r\n    id: number;\r\n}\r\n\r\nfunction Message(props: setMessageType) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    {props.messages}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItems from \"./DialogItems/DialogItems\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormController/FormController\";\r\nimport {maxLengthCreator, requiredField} from \"../utils/validators/validator\";\r\n\r\nlet maxLength = maxLengthCreator(10)\r\nfunction Dialogs(props: DialogsPropsType) {\r\n    let state = props.dialogPage\r\n\r\n    let usersData = state.users.map(el => <DialogItems\r\n        key={el.id}\r\n        name={el.name}\r\n        id={el.id}\r\n    />)\r\n    let messagesData = state.messages.map(el => <Message\r\n        key={el.id}\r\n        messages={el.messages}\r\n        id={el.id}\r\n    />)\r\n    let onNewMessageClick = (value:any) => {\r\n        props.sendMessage(value.dialog)\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div>\r\n\r\n                {usersData}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                <div> {messagesData}</div>\r\n                <div>\r\n                    <MessagesReduxForm onSubmit={onNewMessageClick}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst DialogMessageForm:React.FC<InjectedFormProps<string>> = (props) => {\r\n\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name={'dialog'} type={'text'} placeholder={'Enter your message'}\r\n                       validate={[requiredField, maxLength]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button > Send </button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport const MessagesReduxForm = reduxForm<string>({form: 'dialog'})(DialogMessageForm)\r\nexport default Dialogs","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    InitialStateType, sendMessage\r\n} from \"../../redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {compose} from 'redux'\r\nimport {withAuthRedirectComponent} from \"../../hoc/WithAuthRedirectComponent\";\r\nimport {withRouter} from \"react-router\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    sendMessage: (dialog:string) => void;\r\n}\r\n\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\nlet mapStateToProps = (state:AppStateType) : MapStateToPropsType => ({\r\n    dialogPage:state.dialogPage\r\n})\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,\r\n        {sendMessage}),\r\n    withRouter,withAuthRedirectComponent)(Dialogs)"],"sourceRoot":""}