{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItems/DialogItems.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/state.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Friends/Friends.tsx","App.tsx","index.tsx"],"names":["module","exports","Header","className","s","header","src","alt","Navbar","nav","item","active","to","activeClassName","activeLink","itemFriends","Post","props","message","like","MyPosts","messageData","map","el","likeCount","postsBLock","value","newPostText","onChange","e","dispatch","type","newPost","currentTarget","onClick","post","posts","ProfileInfo","pic","descriptionBlock","store","_state","profilePage","id","dialogsPage","users","name","messages","sidebar","friends","_onChange","getState","this","subscribe","observer","action","push","Profile","bind","DialogItems","dialog","img","Message","React","createRef","chat","ref","alert","current","Dialogs","usersData","messagesData","dialogs","dialogsItems","News","Music","Settings","Friends","App","path","render","component","rerenderEntireTree","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.93b5565c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3dKQv\",\"item\":\"Navbar_item__2oB40\",\"activeLink\":\"Navbar_activeLink__2zl4L\",\"itemFriends\":\"Navbar_itemFriends__XZia7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2-Sg2\",\"messages\":\"Dialogs_messages__bRGYr\",\"message\":\"Dialogs_message__3VBPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItems_dialogsItems__1-icN\",\"active\":\"DialogItems_active__1YM7J\",\"img\":\"DialogItems_img__3mM_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBLock\":\"MyPosts_postsBLock__21aF9\",\"posts\":\"MyPosts_posts__1Xedv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Al15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Cx6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2y6KL\"};","import React from 'react';\n\nimport s from './Header.module.css';\n\nfunction Header() {\n  return (\n    <header className={s.header}>\n      <img src=\"https://www.freelogodesign.org/Content/img/logo-ex-7.png\" alt=\"\"/>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css';\n\ntype NavbarType = {\n\n}\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\n            </div>\n            <div className={s.itemFriends}>\n                <NavLink to='/friends' activeClassName={s.activeLink}>Friends</NavLink>\n            </div>\n            <span className={s.itemFriends}>\n                <NavLink to='/Abay' activeClassName={s.activeLink}> Abay </NavLink>\n            </span>\n            <span className={s.itemFriends}>\n                <NavLink to='/Salta' activeClassName={s.activeLink}> Salta </NavLink>\n            </span>\n            <span className={s.itemFriends}>\n                <NavLink to='/Samal' activeClassName={s.activeLink}> Samal </NavLink>\n            </span>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nimport s from './Post.module.css';\n\ntype PostPropsType={\n    message: string\n    like:number\n}\n\nfunction Post(props:PostPropsType) {\n    return (\n        <div >\n            <div className={s.item}>\n                <img src=\"https://lwlies.com/wp-content/uploads/2017/04/avatar-2009.jpg\" alt=\"\"/>\n                {props.message}\n                <div>\n                    <span>\n                        {props.like}\n                        <button>like</button>\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;\n","import React, {ChangeEvent, ChangeEventHandler} from 'react';\n\nimport s from './MyPosts.module.css';\nimport Posts from \"./Post/Post\";\nimport {ActionsTypes, messageType} from \"../../../redux/state\";\n\n\ntype stateMyPostsType = {\n    message: messageType[]\n    newPostText: string;\n\n    dispatch: (action: ActionsTypes) => void;\n}\n\nfunction MyPosts(props: stateMyPostsType) {\n\n    let messageData = props.message.map(el => <Posts message={el.message} like={el.likeCount}/>)\n    let addPost = () => {\n        props.dispatch({type: \"ADD-POST\", post: props.newPostText})\n    }\n    let addPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n\n        props.dispatch({type: \"CHANGE-NEW-POST-TEXT\", newPost: e.currentTarget.value})\n    }\n    return (\n        <div className={s.postsBLock}>\n            <h3>My posts</h3>\n            <div>\n                <div>\n                    <textarea value={props.newPostText} onChange={addPostChange}/>\n                </div>\n                <div>\n                    <button onClick={addPost}>add new post</button>\n                </div>\n            </div>\n            <div className={s.posts}>\n\n                {messageData}\n\n            </div>\n        </div>\n    );\n}\n\nexport default MyPosts;\n","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\ntype ProfileInfoType = {\r\n    pic:string;\r\n}\r\n\r\nfunction ProfileInfo(props:ProfileInfoType){\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src={props.pic}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","export type messageType = {\r\n    message: string;\r\n    likeCount: number;\r\n    id: number\r\n}\r\nexport type userType = {\r\n    id: string;\r\n    name: string;\r\n}\r\nexport type messagesType = {\r\n    id: number;\r\n    messages: string;\r\n}\r\nexport type sidebarType = {\r\n    id: number;\r\n    name: string;\r\n}\r\nexport type profilePageType = {\r\n    message: messageType[],\r\n    newPostText: string;\r\n}\r\nexport type dialogsPageType = {\r\n    users: userType[]\r\n    messages: messagesType[]\r\n}\r\nexport type sidebarsType = {\r\n    friends: sidebarType[]\r\n}\r\nexport type stateRootType = {\r\n    profilePage: profilePageType\r\n    dialogsPage: dialogsPageType\r\n    sidebar: sidebarsType\r\n}\r\n\r\nexport type StoreType = {\r\n    _state: stateRootType;\r\n    _onChange: () => void;\r\n    subscribe: (observer: () => void) => void;\r\n    getState: () => stateRootType;\r\n    dispatch: (action: ActionsTypes) => void;\r\n}\r\nexport type AddPostActionType = {\r\n    type: 'ADD-POST';\r\n    post: string;\r\n}\r\nexport type ChangeNewPostActionType = {\r\n    type: 'CHANGE-NEW-POST-TEXT';\r\n    newPost: string;\r\n}\r\nexport type ActionsTypes = AddPostActionType | ChangeNewPostActionType\r\n\r\nlet store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            message: [\r\n                {id: 1, message: 'Hi, how are you?', likeCount: 22},\r\n                {id: 2, message: 'It is my first post', likeCount: 11},\r\n\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        dialogsPage: {\r\n            users: [\r\n                {id: '1', name: 'Damir'},\r\n                {id: '2', name: 'Abay'},\r\n                {id: '3', name: 'Kyama'},\r\n                {id: '4', name: 'Kaidar'},\r\n                {id: '5', name: 'Aday'},\r\n\r\n            ],\r\n            messages: [\r\n                {id: 1, messages: 'Hi'},\r\n                {id: 2, messages: 'What\\'s up?'},\r\n                {id: 3, messages: 'How\\'s it going?'},\r\n\r\n            ]\r\n        },\r\n        sidebar: {\r\n            friends: [\r\n                {id: 1, name: 'Abay'},\r\n                {id: 2, name: 'Salta'},\r\n                {id: 3, name: 'Samal'}\r\n            ]\r\n        }\r\n    },\r\n    _onChange() {\r\n\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscribe(observer) {\r\n        this._onChange = observer\r\n    },\r\n    dispatch(action) {\r\n        if (action.type === 'ADD-POST') {\r\n            const newPost: messageType = {\r\n                id: 3,\r\n                message: action.post,\r\n                likeCount: 0\r\n            };\r\n            this._state.profilePage.message.push(newPost)\r\n            this._state.profilePage.newPostText = ''\r\n            this._onChange()\r\n        } else if (action.type === 'CHANGE-NEW-POST-TEXT') {\r\n            this._state.profilePage.newPostText = action.newPost\r\n            this._onChange()\r\n        }\r\n    }\r\n}\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import React from 'react';\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport store, {ActionsTypes, AddPostActionType, ChangeNewPostActionType, messageType} from \"../../redux/state\";\n\ntype stateProfileType = {\n    message: messageType[]\n    newPostText: string;\n\n    dispatch: (action: ActionsTypes) => void;\n\n}\n\nfunction Profile(props: stateProfileType) {\n    return (\n        <div>\n            <ProfileInfo\n                pic={'https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'}/>\n            <MyPosts message={props.message}\n                     newPostText={props.newPostText}\n                     dispatch={store.dispatch.bind(store)}/>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from \"./DialogItems.module.css\";\r\n\r\ntype DialogItemsTypes = {\r\n    name:string\r\n    id:string\r\n}\r\n\r\nfunction DialogItems(props:DialogItemsTypes) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={`${s.dialog} ${s.active}`}>\r\n                <img className={s.img} src=\"https://media.vanityfair.com/photos/5c5325d3cec32271820c6fc1/master/w_1600%2Cc_limit/ava-max-interview.jpg\" alt=\"\"/>\r\n                <NavLink to={'/dialogs/'+props.id}>{props.name}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItems","import React, {ChangeEvent, LegacyRef} from 'react'\r\nimport s from \"./Message.module.css\";\r\n\r\ntype setMessageType = {\r\n    messages: string;\r\n    id: number;\r\n}\r\n\r\nfunction Message(props: setMessageType) {\r\n    let newPost = React.createRef<HTMLTextAreaElement>();\r\n    let addPost = () => {\r\n        alert(newPost.current?.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.message}>\r\n                <div className={s.chat}>\r\n                    {props.messages}\r\n                </div>\r\n                <textarea ref={newPost}></textarea>\r\n                <button onClick={addPost}>add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItems from \"./DialogItems/DialogItems\";\r\nimport Message from \"./Message/Message\";\r\nimport { messagesType, userType} from '../../redux/state'\r\n\r\ntype stateDialogsType = {\r\n    users:userType[]\r\n    messages:messagesType[]\r\n}\r\n\r\nfunction Dialogs(props:stateDialogsType) {\r\n\r\n    let usersData = props.users.map(el=><DialogItems name={el.name} id={el.id}/>)\r\n    let messagesData = props.messages.map(el=> <Message messages={el.messages} id={el.id}/>)\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {usersData}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                {messagesData}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport s from './News.module.css'\r\nfunction News(props:any){\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News","import React from 'react'\r\nimport s from './Music.module.css'\r\nfunction Music(props:any){\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from 'react'\r\nimport s from './Settings.module.css'\r\nfunction Settings(props:any){\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from 'react'\r\nimport s from './Friends.module.css'\r\nfunction Friends(props:any){\r\n    return (\r\n        <div>\r\n            Friends\r\n        </div>\r\n    )\r\n}\r\nexport default Friends","import React from 'react';\nimport Header from './components/Header/Header'\nimport Navbar from './components/Navbar/Navbar'\nimport Profile from './components/Profile/Profile'\nimport './App.css';\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport store, {StoreType} from './redux/state'\nimport Friends from \"./components/Friends/Friends\";\n\ntype PropsType = {\n    store: StoreType\n}\n\nconst App: React.FC<PropsType> = (props) => {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <Route path='/dialogs' render={() => <Dialogs users={props.store._state.dialogsPage.users}\n                                                                  messages={props.store._state.dialogsPage.messages}\n                    />}/>\n                    <Route path='/profile' render={() => <Profile message={props.store._state.profilePage.message}\n                                                                  dispatch={store.dispatch.bind(store)}\n                                                                  newPostText={props.store._state.profilePage.newPostText}\n\n                    />}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/friends' render={() => <Friends/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/state\";\n\nexport let rerenderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App store={store}\n            />\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n}\nstore.subscribe(rerenderEntireTree)\nrerenderEntireTree();\n"],"sourceRoot":""}