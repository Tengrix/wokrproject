{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItems/DialogItems.module.css","components/Users/UsersApiComponent.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Friends/Friends.tsx","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","redux/dialog-reducer.tsx","components/Dialogs/DialogsContainer.tsx","redux/users-reducer.ts","components/Users/Users.tsx","Pics/Iphone-spinner-2.gif","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","redux/profile-reducer.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.tsx","components/Header/HeaderContainer.tsx","App.tsx","redux/friends-reducer.tsx","redux/redux-store.ts","index.tsx"],"names":["module","exports","Navbar","className","s","nav","item","to","activeClassName","activeLink","itemFriends","News","props","Music","Settings","Friends","DialogItems","dialog","active","img","src","alt","id","name","Message","message","chat","messages","Dialogs","usersData","users","map","el","messagesData","createMessageBody","newMessageBody","dialogs","dialogsItems","value","placeholder","onChange","e","updatedMessageBody","currentTarget","onClick","sendMessage","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","dialogReducer","state","action","type","body","DialogsContainer","connect","dialogPage","dispatch","text","pageCount","totalUsersCount","currentPage","isFetching","usersReducer","userId","followed","pageNumber","Users","pagesCount","Math","ceil","pages","i","push","selectedPage","onPageChanged","photoUrl","axios","post","withCredentials","headers","then","response","data","resultCode","follow","delete","unfollow","status","Preloader","preloader","UsersAPIComponent","setCurrentPage","setToggleFetching","get","setUser","items","this","setTotalUsersCount","totalCount","React","Component","UsersContainer","usersPage","ProfileInfo","profile","pic","descriptionBlock","fullName","photos","small","contacts","vk","github","facebook","twitter","website","instagram","lookingForAJob","lookingForAJobDescription","Post","like","MyPosts","messageData","likeCount","postsBLock","newPostText","changeNewText","addPost","posts","ADD_POST","CHANGE_NEW_POST_TEXT","profileReducer","newPost","MyPostsContainer","profilePage","Profile","ProfileContainer","match","params","setProfile","WithUrlDataContainerComponent","withRouter","Header","header","loginBlock","isAuth","login","email","authReducer","HeaderContainer","setAuthUserData","auth","App","path","render","component","friends","friendsReducer","rootReducer","combineReducers","sideBarPage","store","createStore","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.559d69f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__IcOa7\",\"messages\":\"Dialogs_messages__2ipxb\",\"message\":\"Dialogs_message__2cCpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItems_dialogsItems__2fZHv\",\"active\":\"DialogItems_active__2ISGM\",\"img\":\"DialogItems_img__3cAL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"UsersApiComponent_img__hQbIU\",\"selectedPage\":\"UsersApiComponent_selectedPage__2oxjD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBLock\":\"MyPosts_postsBLock__2XgTU\",\"posts\":\"MyPosts_posts__2c1oP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3kPns\",\"loginBlock\":\"Header_loginBlock__2AcFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2Y1mw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__12Fn7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2LvmE\",\"item\":\"Navbar_item__3Z4YA\",\"activeLink\":\"Navbar_activeLink__E3EjW\",\"itemFriends\":\"Navbar_itemFriends__ukrFy\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css';\n\ntype NavbarType = {\n\n}\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={`${s.item}`}>\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\n            </div>\n            <div className={s.itemFriends}>\n                <NavLink to='/friends' activeClassName={s.activeLink}>Friends</NavLink>\n            </div>\n            <span className={s.itemFriends}>\n                <NavLink to='/Abay' activeClassName={s.activeLink}> Aboy </NavLink>\n            </span>\n            <span className={s.itemFriends}>\n                <NavLink to='/Salta' activeClassName={s.activeLink}> Salta </NavLink>\n            </span>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react'\r\nimport s from './News.module.css'\r\nfunction News(props:any){\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News","import React from 'react'\r\nfunction Music(props:any){\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from 'react'\r\nimport s from './Settings.module.css'\r\nfunction Settings(props:any){\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from 'react'\r\nfunction Friends(){\r\n    return (\r\n        <div>\r\n            Friends\r\n        </div>\r\n    )\r\n}\r\nexport default Friends","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from \"./DialogItems.module.css\";\r\n\r\ntype DialogItemsTypes = {\r\n    name:string\r\n    id:string\r\n}\r\n\r\nfunction DialogItems(props:DialogItemsTypes) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={`${s.dialog} ${s.active}`}>\r\n                <img className={s.img} src=\"https://media.vanityfair.com/photos/5c5325d3cec32271820c6fc1/master/w_1600%2Cc_limit/ava-max-interview.jpg\" alt=\"\"/>\r\n                <NavLink to={'/dialogs/'+props.id}>{props.name}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItems","import React from 'react'\r\nimport s from \"./Message.module.css\";\r\n\r\ntype setMessageType = {\r\n    messages: string;\r\n    id: number;\r\n}\r\n\r\nfunction Message(props: setMessageType) {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>\r\n                <div className={s.chat}>\r\n                    {props.messages}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React, {ChangeEvent} from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItems from \"./DialogItems/DialogItems\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\n\r\n\r\nfunction Dialogs(props: DialogsPropsType) {\r\n\r\n    let usersData = props.users.map(el => <DialogItems\r\n        name={el.name}\r\n        id={el.id}\r\n    />)\r\n    let messagesData = props.messages.map(el => <Message\r\n        messages={el.messages}\r\n        id={el.id}\r\n    />)\r\n    let createMessageBody = props.newMessageBody\r\n    let onNewMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n    let onSendMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updatedMessageBody(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {usersData}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                <div> {messagesData}</div>\r\n                <div>\r\n                    <div><textarea\r\n                        value={createMessageBody}\r\n                        placeholder={'Enter your message'}\r\n                        onChange={onSendMessageChange}\r\n                    ></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onNewMessageClick}>Send</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","type ActionsTypesF =\r\n    ReturnType<typeof newMessageBodyAC> |\r\n    ReturnType<typeof sendMessageAC>\r\n\r\nexport const UPDATE_NEW_MESSAGE_BODY = 'NEW-MESSAGE-BODY'\r\nexport const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nexport type messagesType = {\r\n    id: number;\r\n    messages: string;\r\n}\r\nexport type userType = {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\n\r\nexport type InitialStateType = {\r\n    users: userType[]\r\n    messages: messagesType[]\r\n    newMessageBody: string\r\n}\r\nlet initialState: InitialStateType = {\r\n    users: [\r\n        {id: '1', name: 'Damir'},\r\n        {id: '2', name: 'Abay'},\r\n        {id: '3', name: 'Kyama'},\r\n        {id: '4', name: 'Kaidar'},\r\n        {id: '5', name: 'Aday'},\r\n\r\n    ] as userType[],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'What\\'s up?'},\r\n        {id: 3, messages: 'How\\'s it going?'},\r\n\r\n    ] as messagesType[],\r\n    newMessageBody: ''\r\n}\r\n\r\nexport const dialogReducer = (state: InitialStateType = initialState, action: ActionsTypesF):InitialStateType => {\r\n    switch (action.type){\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            }\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id:6, messages: body} ],\r\n                newMessageBody: ''\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const newMessageBodyAC= (body: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        body: body\r\n    } as const\r\n\r\n}\r\nexport const sendMessageAC = () => {\r\n    return {\r\n        type: SEND_MESSAGE\r\n    } as const\r\n\r\n}\r\n// type dialogReducerAT = sendMessageAType|updateMessageAT\r\n// export type sendMessageAType = {\r\n//     type:'SEND-MESSAGE'\r\n//     id: number;\r\n//     title: string;\r\n// }\r\n// export type updateMessageAT = {\r\n//     type: 'NEW-MESSAGE-BODY'\r\n//     body: string\r\n// }\r\n// export const sendMessageAC = (id:number, title:string):sendMessageAType => {\r\n//     return {type: 'SEND-MESSAGE', id, title}\r\n// }\r\n// export const updateMessageAC = (body:string):updateMessageAT => {\r\n//     return {type: 'NEW-MESSAGE-BODY', body}\r\n// }\r\n\r\nexport default dialogReducer","import React from 'react'\r\nimport {Dispatch} from \"redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    messagesType,\r\n    newMessageBodyAC,\r\n    sendMessageAC,\r\n    userType\r\n} from \"../../redux/dialog-reducer\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: userType[];\r\n    messages: messagesType[];\r\n    newMessageBody: string;\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    updatedMessageBody: (text:string) => void;\r\n    sendMessage: () => void;\r\n}\r\n\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state:AppStateType) :MapStateToPropsType => {\r\n    return {\r\n        users:state.dialogPage.users,\r\n        messages:state.dialogPage.messages,\r\n        newMessageBody:state.dialogPage.newMessageBody\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch:Dispatch) : MapDispatchToPropsType => {\r\n    return {\r\n        updatedMessageBody: (text:string) => {\r\n            dispatch(newMessageBodyAC(text))\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageAC())\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer","type ActionsTypesF =\r\n    ReturnType<typeof follow>|\r\n    ReturnType<typeof unfollow>|\r\n    ReturnType<typeof setUser>|\r\n    ReturnType<typeof setCurrentPage>|\r\n    ReturnType<typeof setTotalUsersCount>|\r\n    ReturnType<typeof setToggleFetching>\r\n\r\n\r\nexport type UsersType = {\r\n    id:number;\r\n    photoUrl:string\r\n    name:string;\r\n    status:string\r\n    followed:boolean\r\n    location:{\r\n        city:string,\r\n        country:string\r\n    }\r\n}\r\nexport type InitialStateType = {\r\n    users: UsersType[]\r\n    pageCount:number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\nexport type followAT = {\r\n    type:'FOLLOW'\r\n    userId:number\r\n}\r\nexport type unfollowAT = {\r\n    type:'UNFOLLOW'\r\n    userId:number\r\n}\r\nexport type setUserAT = {\r\n    type:'SET-USERS'\r\n    users:UsersType[]\r\n}\r\nexport type setPageAT = {\r\n    type: 'SET-PAGE'\r\n    pageNumber: number\r\n}\r\nexport type setTotalUsersCountAT = {\r\n    type: 'SET-TOTAL-USERS'\r\n    totalUsersCount:number\r\n}\r\nexport type setToggleFetching = {\r\n    type: 'SET-TOGGLE-FETCHING'\r\n    isFetching: boolean\r\n}\r\nlet initialState : InitialStateType = {\r\n    users: [] as UsersType[],\r\n    pageCount: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypesF): InitialStateType => {\r\n    switch (action.type){\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(el => el.id === action.userId ? {...el, followed:false}:el)}\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(el => el.id === action.userId ? {...el, followed:true}:el)\r\n            }\r\n        case \"SET-USERS\":\r\n            return {\r\n                ...state, users:action.users\r\n            }\r\n        case 'SET-PAGE':\r\n            return {\r\n                ...state, currentPage:action.pageNumber\r\n            }\r\n        case \"SET-TOTAL-USERS\":\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n        case \"SET-TOGGLE-FETCHING\":\r\n            return {\r\n                ...state, isFetching:action.isFetching\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const follow = (userId:number):followAT => {\r\n    return {\r\n        type:'FOLLOW',\r\n        userId\r\n    } as const\r\n}\r\nexport const unfollow = (userId:number):unfollowAT => {\r\n    return {\r\n        type:'UNFOLLOW',\r\n        userId\r\n    } as const\r\n}\r\nexport const setUser = (users:UsersType[]):setUserAT => {\r\n    return{\r\n        type:'SET-USERS',\r\n        users\r\n    } as const\r\n}\r\nexport const setCurrentPage = (pageNumber:number):setPageAT =>{\r\n    return {\r\n        type:'SET-PAGE',\r\n        pageNumber\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount:number):setTotalUsersCountAT =>{\r\n    return {\r\n        type:'SET-TOTAL-USERS',\r\n        totalUsersCount\r\n    } as const\r\n}\r\nexport const setToggleFetching = (isFetching: boolean):setToggleFetching => {\r\n    return {\r\n        type: \"SET-TOGGLE-FETCHING\",\r\n        isFetching\r\n    }as const\r\n}\r\n\r\nexport default usersReducer","import React from 'react'\r\nimport s from \"./UsersApiComponent.module.css\";\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport axios from \"axios\";\r\n\r\ntype onPageChangedType = {\r\n    onPageChanged: (page: number) => void\r\n}\r\nexport type UsersPresentPropsType = UsersPropsType & onPageChangedType\r\nlet Users = (props: UsersPresentPropsType) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageCount)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return <div>\r\n        <div>\r\n            {pages.map(el => {\r\n                return <span className={props.currentPage === el ? s.selectedPage : ''}\r\n                             onClick={() => props.onPageChanged(el)}>{el}</span>\r\n            })}\r\n\r\n        </div>\r\n        {\r\n            props.users.map(el => <div key={el.id}>\r\n                    <span>\r\n                        <div>\r\n\r\n                            <img className={s.img}\r\n                                 src={el.photoUrl != null ? el.photoUrl : 'https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png'}\r\n                                 alt=\"\"/>\r\n\r\n                        </div>\r\n                        <div>\r\n\r\n                            {el.followed ?\r\n                                <button onClick={() => {\r\n                                    axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${el.id}`,{},\r\n                                        {withCredentials:true,\r\n                                            headers:{\r\n                                                'API-KEY': '1eaa5d66-d310-487c-a1d0-2fd59af6c2de'\r\n                                            }\r\n                                        }\r\n                                    ).then(response=>{\r\n                                        if(response.data.resultCode===0){\r\n                                            props.follow(el.id)\r\n                                        }\r\n                                    })\r\n                                    }}>follow</button>\r\n                                :<button onClick={() => {\r\n                                    axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${el.id}`,\r\n                                        {withCredentials:true,\r\n                                            headers:{\r\n                                            'API-KEY': '1eaa5d66-d310-487c-a1d0-2fd59af6c2de'\r\n                                            }\r\n                                        }\r\n                                    ).then(response=>{\r\n                                        if(response.data.resultCode===0){\r\n                                            props.unfollow(el.id)\r\n                                        }\r\n                                    })\r\n                                }}>unfollow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                <span>\r\n                            <span>\r\n                                <div>{el.name}</div>\r\n                                <div>{el.status}</div>\r\n\r\n                            </span>\r\n                        <span>\r\n                            <div>{'el.location.country'}</div>\r\n                            <div>{'el.location.city'}</div>\r\n                        </span>\r\n                    </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\nexport default Users","export default __webpack_public_path__ + \"static/media/Iphone-spinner-2.d3fbaf2b.gif\";","import React from \"react\";\r\n\r\nimport preloader from './../../../Pics/Iphone-spinner-2.gif'\r\n\r\n\r\nconst Preloader = () =>{\r\n    return <div>\r\n        <img src={preloader} alt=\"\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    UsersType,\r\n    follow,\r\n    unfollow,\r\n    setUser,\r\n    setCurrentPage,\r\n    setTotalUsersCount, setToggleFetching\r\n} from \"../../redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\ntype GetUsersType = {\r\n    error: string;\r\n    totalCount: number;\r\n    items: UsersType[]\r\n}\r\nexport type MapStateToPropsType = {\r\n    users: UsersType[];\r\n    pageCount: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    follow: (userId: number) => void;\r\n    unfollow: (userId: number) => void;\r\n    setUser: (users: UsersType[]) => void;\r\n    setCurrentPage: (pageNumber: number) => void;\r\n    setTotalUsersCount: (totalCount: number) => void;\r\n    setToggleFetching: (isFetching: boolean) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass UsersAPIComponent extends React.Component<UsersPropsType, UsersPropsType> {\r\n    componentDidMount() {\r\n        this.props.setToggleFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageCount}`,\r\n            {withCredentials: true}\r\n        ).then(response => {\r\n            this.props.setToggleFetching(false)\r\n            this.props.setUser(response.data.items)\r\n            this.props.setTotalUsersCount(response.data.totalCount)\r\n        })\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.setToggleFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageCount}`,\r\n            {withCredentials: true}\r\n        ).then(response => {\r\n            this.props.setToggleFetching(false)\r\n            this.props.setUser(response.data.items)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users currentPage={this.props.currentPage}\r\n                   follow={this.props.follow}\r\n                   pageCount={this.props.pageCount}\r\n                   setCurrentPage={this.props.setCurrentPage}\r\n                   setTotalUsersCount={this.props.setTotalUsersCount}\r\n                   setUser={this.props.setUser}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.users}\r\n                   onPageChanged={this.onPageChanged}\r\n                   isFetching={this.props.isFetching}\r\n                   setToggleFetching={this.props.setToggleFetching}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageCount: state.usersPage.pageCount,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\nconst UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setUser,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setToggleFetching\r\n})(UsersAPIComponent);\r\n\r\nexport default UsersContainer","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\ntype ProfileInfoType = {\r\n    pic:string;\r\n    profile:ProfileType\r\n}\r\n\r\nfunction ProfileInfo(props:ProfileInfoType){\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <img\r\n                    src={props.pic}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <p>\r\n                    {props.profile.fullName}\r\n                </p>\r\n                <img src={props.profile.photos.small} alt=\"\"/>\r\n                <span> Я будущий спец в IT-INDUSTRY</span>\r\n                <div>\r\n                    <div>{props.profile.contacts.vk} </div>\r\n                    <div>{props.profile.contacts.github} </div>\r\n                    <div>{props.profile.contacts.facebook}</div>\r\n                    <div>{props.profile.contacts.twitter} </div>\r\n                    <div>{props.profile.contacts.website} </div>\r\n                    <div>{props.profile.contacts.instagram} </div>\r\n                </div>\r\n                <div>\r\n                    {props.profile.lookingForAJob}\r\n                </div>\r\n                <div>\r\n                    {props.profile.lookingForAJobDescription}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import React from 'react';\n\nimport s from './Post.module.css';\n\ntype PostPropsType={\n    message: string\n    like:number\n}\n\nfunction Post(props:PostPropsType) {\n    return (\n        <div >\n            <div className={s.item}>\n                <img src=\"https://lwlies.com/wp-content/uploads/2017/04/avatar-2009.jpg\" alt=\"\"/>\n                {props.message}\n                <div>\n                    <span>\n                        {props.like}\n                        <button>like</button>\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;\n","import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport Posts from \"./Post/Post\";\nimport {ProfilePropsType} from \"./MyPostsContainer\";\n\n\nfunction MyPosts(props: ProfilePropsType) {\n\n    let messageData = props.message.map(el => <Posts message={el.message} like={el.likeCount}/>)\n    let addPost = () => {\n        props.addPost()\n    }\n    let addPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        props.changeNewText(e.currentTarget.value)\n    }\n    return (\n        <div className={s.postsBLock}>\n            <h3>My posts</h3>\n            <div>\n                <div>\n                    <textarea value={props.newPostText} onChange={addPostChange}/>\n                </div>\n                <div>\n                    <button onClick={addPost}>add new post</button>\n                </div>\n            </div>\n            <div className={s.posts}>\n\n                {messageData}\n\n            </div>\n        </div>\n    );\n}\n\nexport default MyPosts;\n","type ActionsTypesF =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof changeNewText>|\r\n    ReturnType<typeof setProfile>\r\n\r\nexport const ADD_POST = 'ADD-POST'\r\nexport const CHANGE_NEW_POST_TEXT = 'CHANGE-NEW-POST-TEXT'\r\n\r\nexport type messageType = {\r\n    message: string;\r\n    likeCount: number;\r\n    id: number;\r\n}\r\n\r\ntype ProfilePhotoType = {\r\n    small:string\r\n    large:string\r\n}\r\n\r\nexport type ProfileType = {\r\n    userId: number;\r\n    lookingForAJob: boolean;\r\n    lookingForAJobDescription: string;\r\n    fullName: string;\r\n    contacts: {\r\n        github:string;\r\n        vk: string;\r\n        facebook: string;\r\n        instagram: string;\r\n        twitter: string;\r\n        website:string;\r\n        youtube: string;\r\n        mainLink: string;\r\n    }\r\n    photos:ProfilePhotoType\r\n}\r\n\r\nexport type InitialStateType = {\r\n    message: messageType[];\r\n    newPostText: string;\r\n    profile: ProfileType | null\r\n}\r\n\r\nlet initialState : InitialStateType = {\r\n    message: [\r\n        {id: 1, message: 'Hi, how are you?', likeCount: 22},\r\n        {id: 2, message: 'It is my first post', likeCount: 11},\r\n\r\n    ]as messageType[] ,\r\n    newPostText: '',\r\n    profile:null\r\n}\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsTypesF): InitialStateType => {\r\n    switch (action.type){\r\n        case ADD_POST:{\r\n            const newPost: messageType = {\r\n                id: 3,\r\n                message: state.newPostText,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                message: [...state.message, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case CHANGE_NEW_POST_TEXT:{\r\n            return{\r\n                ...state,\r\n                newPostText:action.newPost\r\n            }\r\n        }\r\n        case \"SET-PROFILE\":\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPost = () => {\r\n    return {\r\n        type: ADD_POST,\r\n    } as const\r\n}\r\nexport const changeNewText = (newPost: string) => {\r\n    return {\r\n        type: CHANGE_NEW_POST_TEXT,\r\n        newPost\r\n    } as const\r\n}\r\nexport const setProfile = (profile:ProfileType) => {\r\n    return {\r\n        type: 'SET-PROFILE',\r\n        profile\r\n    } as const\r\n}\r\n\r\nexport default profileReducer","import React from 'react';\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {addPost, changeNewText, messageType} from \"../../../redux/profile-reducer\";\nimport {Dispatch} from \"redux\";\n\ntype MapStateToPropsType = {\n    message: messageType[];\n    newPostText: string;\n}\n\ntype MapDispatchToPropsType = {\n    changeNewText: (text: string) => void;\n    addPost:() => void;\n}\n\nexport type ProfilePropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state:AppStateType): MapStateToPropsType => {\n    return{\n        message: state.profilePage.message,\n        newPostText: state.profilePage.newPostText\n\n    }\n}\nconst mapDispatchToProps = (dispatch:Dispatch) :MapDispatchToPropsType => {\n    return{\n        changeNewText: (text:string) => {\n            dispatch(changeNewText(text))\n        },\n        addPost: () => {\n            dispatch(addPost())\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {ProfileType} from \"../../redux/profile-reducer\";\nimport {ProfileContainerPropsType} from \"./ProfileContainer\";\ntype ProfilePropsType = {\n    profile: ProfileType\n}\ntype MainProfilePropsType = ProfilePropsType & ProfileContainerPropsType\nfunction Profile(props:MainProfilePropsType) {\n    return (\n        <div>\n            <ProfileInfo\n                profile={props.profile}\n                pic={'https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'}\n            />\n            <MyPostsContainer />\n        </div>\n    );\n}\n\nexport default Profile;\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {ProfileType, setProfile} from \"../../redux/profile-reducer\";\r\nimport { withRouter} from 'react-router'\r\n\r\ntype MapStateToPropsType = {\r\n    profile:ProfileType | null\r\n}\r\ntype MapStateDispatchToPropsType = {\r\n    setProfile: (profile:ProfileType) => void;\r\n}\r\nexport type ProfileContainerPropsType = MapStateToPropsType & MapStateDispatchToPropsType\r\nclass ProfileContainer extends React.Component <any, any> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId){\r\n            userId = 15\r\n        }\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+ userId)\r\n            .then(response=>{\r\n                this.props.setProfile(response.data)\r\n\r\n\r\n            })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     setProfile={this.props.setProfile}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state:AppStateType):MapStateToPropsType => {\r\n    return {\r\n        profile:state.profilePage.profile\r\n    }\r\n\r\n}\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps,{setProfile})(WithUrlDataContainerComponent);\r\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Header.module.css';\nimport {HeaderContainerTypeProps} from \"./HeaderContainer\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\nfunction Header(props:HeaderContainerTypeProps) {\n  return (\n    <header className={s.header}>\n      <img src=\"https://www.freelogodesign.org/Content/img/logo-ex-7.png\" alt=\"\"/>\n        <div className={s.loginBlock}>\n            {props.isAuth? props.login : <NavLink to={'/login'}>Login</NavLink>}\n        </div>\n    </header>\n  );\n}\n\nexport default Header;\n","type ActionsTypesF =\r\n    ReturnType<typeof setAuthUserData>|\r\n    ReturnType<typeof setToggleFetching>\r\n\r\nexport type setUserDataType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null\r\n}\r\nexport type setToggleFetching = {\r\n    type: 'SET-TOGGLE-FETCHING'\r\n    isFetching:boolean\r\n}\r\nexport type setUserDataTypeAT = {\r\n    type: 'SET-USER-DATA'\r\n    data: setUserDataType\r\n}\r\n\r\nexport type InitialStateType = {\r\n    data: setUserDataType\r\n    isFetching: boolean;\r\n    isAuth: boolean;\r\n}\r\nlet initialState: InitialStateType = {\r\n    data:{\r\n        email:null,\r\n        login:null,\r\n        userId: null\r\n    },\r\n    isFetching: false,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsTypesF): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                isAuth:true\r\n            }\r\n        case \"SET-TOGGLE-FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAuthUserData = ( userId: number|null, email: string|null, login: string|null) : setUserDataTypeAT  => {\r\n    return {\r\n        type: 'SET-USER-DATA',\r\n        data:{userId, login, email}\r\n    } as const\r\n}\r\nexport const setToggleFetching = (isFetching: boolean):setToggleFetching => {\r\n    return {\r\n        type: \"SET-TOGGLE-FETCHING\",\r\n        isFetching\r\n    }as const\r\n}\r\nexport default authReducer","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {setAuthUserData, setToggleFetching, setUserDataType} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype mapStateToPropsType = {\r\n    data: setUserDataType\r\n    isAuth: boolean\r\n    login: string | null\r\n    isFetching: boolean\r\n}\r\ntype mapDispatchToProps = {\r\n    setAuthUserData: (data: setUserDataType) => void;\r\n    setToggleFetching: (isFetching: boolean) => void;\r\n}\r\nexport type HeaderContainerTypeProps = mapStateToPropsType & mapDispatchToProps\r\nclass HeaderContainer extends React.Component<any, any>{\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n            withCredentials: true\r\n        }).\r\n        then(response=> {\r\n            this.props.setToggleFetching(false)\r\n            if(response.data.resultCode===0){\r\n                let {id,login,email} = response.data.data\r\n                this.props.setAuthUserData(id,login,email)\r\n                this.props.setToggleFetching(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}\r\n                       data={this.props.data}\r\n                       login={this.props.login}\r\n                       isAuth={this.props.isAuth}\r\n                       setAuthUserData={this.props.setAuthUserData}\r\n                       isFetching={this.props.isFetching}\r\n                       setToggleFetching={this.props.setToggleFetching}\r\n        />\r\n    }\r\n}\r\nlet mapStateToProps = (state:AppStateType): mapStateToPropsType => {\r\n    return{\r\n        data: state.auth.data,\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.data.login,\r\n        isFetching: state.auth.isFetching\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps,{setAuthUserData,setToggleFetching}) (HeaderContainer)","import React from 'react';\nimport Navbar from './components/Navbar/Navbar'\nimport './App.css';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport Friends from \"./components/Friends/Friends\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/friends' render={() => <Friends/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","type ActionsTypesF = {\r\n\r\n}\r\ntype sidebarType = {\r\n    id: number;\r\n    name: string;\r\n}\r\nexport type InitialStateType = {\r\n    friends: sidebarType[]\r\n}\r\nlet initialState: InitialStateType = {\r\n    friends: [\r\n        {id: 1, name: 'Abay'},\r\n        {id: 2, name: 'Karik'}\r\n    ]\r\n}\r\n\r\nexport const friendsReducer = (state:InitialStateType = initialState, action:ActionsTypesF): InitialStateType => {\r\n\r\n    return state\r\n}\r\nexport default friendsReducer","import {combineReducers,createStore} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\ndeclare global {\r\n    interface Window {store: any}\r\n}\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogReducer,\r\n    sideBarPage: friendsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport type AppStateType =ReturnType<typeof rootReducer>\r\n\r\nlet store:any = createStore(rootReducer);\r\nwindow.store = window.store || {}\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}