{"version":3,"sources":["components/common/FormController/FormControl.module.css","components/common/FormController/FormController.tsx","components/utils/validators/validator.ts","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItems/DialogItems.module.css","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","TextArea","input","meta","props","TextAreaError","touched","error","className","s","formControl","InputArea","requiredField","value","maxLengthCreator","maxLength","length","DialogItems","React","memo","active","img","src","alt","to","id","name","Message","messages","Dialogs","dialogPage","useSelector","state","dispatch","useDispatch","usersData","users","map","el","messagesData","dialogs","MessagesReduxForm","onSubmit","dialogActions","sendMessage","dialog","reduxForm","form","handleSubmit","Field","component","type","placeholder","validate"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,iBAAmB,wC,yJCC1GC,EAAW,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAASC,EAAe,gCAC/CC,EAAgBF,EAAKG,SAAWH,EAAKI,MAC3C,OACI,sBAAKC,UAAWC,IAAEC,YAAc,IAAML,EAAeI,IAAEF,MAAM,IAA7D,UACI,8BACI,oDAAcL,GAAUE,MAE3BC,GAAiB,qCAAQF,EAAKI,MAAb,WAIjBI,EAAY,SAAC,GAAiC,IAAhCT,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAASC,EAAe,gCAChDC,EAAgBF,EAAKG,SAAWH,EAAKI,MAC3C,OACI,sBAAKC,UAAWC,IAAEC,YAAc,IAAML,EAAeI,IAAEF,MAAM,IAA7D,UACI,iDAAWL,GAAWE,IACrBC,GAAiB,uBAAMG,UAAWC,IAAEF,MAAnB,cAA4BJ,EAAKI,MAAjC,Y,iCCjB9B,oEAAO,IAAMK,EAAgB,SAACC,GAC1B,IAAGA,EACH,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAsB,SAACF,GACnD,GAAGA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCNjChB,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,2B,oBCApGD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,OAAS,4BAA4B,IAAM,2B,iKCqB/FiB,EAbKC,IAAMC,MAAK,SAACf,GAE5B,OACI,8BACI,sBAAKI,UAAS,UAAKC,IAAEW,QAArB,UACI,qBAAKZ,UAAWC,IAAEY,IAAKC,IAAI,6GAA6GC,IAAI,KAC5I,cAAC,IAAD,CAASC,GAAI,YAAYpB,EAAMqB,GAA/B,SAAoCrB,EAAMsB,eCK3CC,EAZCT,IAAMC,MAAK,SAACf,GACxB,OACI,8BACI,8BACI,8BACKA,EAAMwB,kB,oDCFvBb,EAAYD,YAAiB,IAC3Be,EAAUX,IAAMC,MAAK,WACvB,IAAMW,EAAaC,aAAiD,SAAAC,GAAK,OAAIA,EAAMF,cAC7EG,EAAWC,cACbF,EAAQF,EAERK,EAAYH,EAAMI,MAAMC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAElCZ,KAAMY,EAAGZ,KACTD,GAAIa,EAAGb,IAFFa,EAAGb,OAIRc,EAAeP,EAAMJ,SAASS,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAExCV,SAAUU,EAAGV,SACbH,GAAIa,EAAGb,IAFFa,EAAGb,OAOZ,OACI,sBAAKjB,UAAWC,IAAE+B,QAAlB,UACI,8BAEKL,IAGL,sBAAK3B,UAAWC,IAAEmB,SAAlB,UAEI,oCAAOW,KACP,8BACI,cAACE,EAAD,CAAmBC,SAdX,SAAC7B,GACrBoB,EAASU,IAAcC,YAAY/B,EAAMgC,uBAqCpCJ,EAAoBK,YAAkB,CAACC,KAAM,UAAzBD,EAjB6B,SAAC1C,GAE3D,OACI,uBAAMsC,SAAUtC,EAAM4C,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWjD,IAAUyB,KAAM,SAAUyB,KAAM,OAAQC,YAAa,qBAChEC,SAAU,CAACzC,IAAeG,OAGrC,8BACI,oDAQDc","file":"static/js/7.c33a6787.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__3bI51\",\"error\":\"FormControl_error__2p-ba\",\"formSummaryError\":\"FormControl_formSummaryError__2aYFp\"};","import React from 'react'\r\nimport s from './FormControl.module.css'\r\nexport const TextArea = ({input, meta, ...props}:any) => {\r\n    const TextAreaError = meta.touched && meta.error\r\n    return(\r\n        <div className={s.formControl + '' + (TextAreaError? s.error:'')}>\r\n            <div >\r\n                <textarea {...input}{...props} />\r\n            </div>\r\n            {TextAreaError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\nexport const InputArea = ({input, meta, ...props}:any) => {\r\n    const TextAreaError = meta.touched && meta.error\r\n    return(\r\n        <div className={s.formControl + '' + (TextAreaError? s.error:'')}>\r\n            <input {...input} {...props}/>\r\n            {TextAreaError && <span className={s.error}> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}","\r\nexport const requiredField = (value:any) => {\r\n    if(value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength:number) => (value:any) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__IcOa7\",\"messages\":\"Dialogs_messages__2ipxb\",\"message\":\"Dialogs_message__2cCpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItems_dialogsItems__2fZHv\",\"active\":\"DialogItems_active__2ISGM\",\"img\":\"DialogItems_img__3cAL3\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from \"./DialogItems.module.css\";\r\n\r\ntype DialogItemsTypes = {\r\n    name:string\r\n    id:string\r\n}\r\n\r\nconst DialogItems = React.memo((props:DialogItemsTypes)=> {\r\n\r\n    return (\r\n        <div>\r\n            <div className={`${s.active}`}>\r\n                <img className={s.img} src=\"https://media.vanityfair.com/photos/5c5325d3cec32271820c6fc1/master/w_1600%2Cc_limit/ava-max-interview.jpg\" alt=\"\"/>\r\n                <NavLink to={'/dialogs/'+props.id}>{props.name}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default DialogItems","import React from 'react'\r\nimport s from \"./Message.module.css\";\r\n\r\ntype setMessageType = {\r\n    messages: string;\r\n    id: number;\r\n}\r\n\r\nconst Message = React.memo((props: setMessageType) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    {props.messages}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItems from \"./DialogItems/DialogItems\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormController/FormController\";\r\nimport {maxLengthCreator, requiredField} from \"../utils/validators/validator\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {dialogActions, InitialDialogStateType} from \"../../redux/dialog-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nlet maxLength = maxLengthCreator(10)\r\nconst Dialogs = React.memo(() => {\r\n    const dialogPage = useSelector<AppStateType,InitialDialogStateType>(state => state.dialogPage)\r\n    const dispatch = useDispatch()\r\n    let state = dialogPage\r\n\r\n    let usersData = state.users.map(el => <DialogItems\r\n        key={el.id}\r\n        name={el.name}\r\n        id={el.id}\r\n    />)\r\n    let messagesData = state.messages.map(el => <Message\r\n        key={el.id}\r\n        messages={el.messages}\r\n        id={el.id}\r\n    />)\r\n    let onNewMessageClick = (value:any) => {\r\n        dispatch(dialogActions.sendMessage(value.dialog))\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div>\r\n\r\n                {usersData}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                <div> {messagesData}</div>\r\n                <div>\r\n                    <MessagesReduxForm onSubmit={onNewMessageClick}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nconst DialogMessageForm:React.FC<InjectedFormProps<string>> = (props) => {\r\n\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name={'dialog'} type={'text'} placeholder={'Enter your message'}\r\n                       validate={[requiredField, maxLength]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button > Send </button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport const MessagesReduxForm = reduxForm<string>({form: 'dialog'})(DialogMessageForm)\r\nexport default Dialogs"],"sourceRoot":""}