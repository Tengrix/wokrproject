{"version":3,"sources":["redux/auth-reducer.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Friends/Friends.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/app-reducer.tsx","App.tsx","redux/friends-reducer.tsx","redux/redux-store.ts","index.tsx","components/Header/Header.module.css","redux/profile-reducer.tsx","Pics/Iphone-spinner-2.gif","components/common/Preloader/Preloader.tsx","redux/dialog-reducer.tsx","components/Navbar/Navbar.module.css","components/utils/helper.ts","redux/users-reducer.ts","api/api.ts"],"names":["initialState","data","id","email","login","isAuth","isFetching","resultCode","messages","setAuthUserData","type","setToggleFetching","AuthMe","dispatch","a","authAPI","getAuthMe","response","AuthLogin","password","rememberMe","getLogin","message","length","stopSubmit","_error","AuthLogOut","getLogOut","authReducer","state","action","Navbar","className","s","nav","item","to","activeClassName","activeLink","itemFriends","News","props","Music","Settings","Friends","Header","header","src","alt","loginBlock","onClick","HeaderContainer","this","React","Component","connect","auth","isInitialized","appReducer","DialogsContainer","lazy","UsersContainer","ProfileContainer","LoginForm","App","useDispatch","isLogged","useSelector","appPage","useEffect","res","Suspense","fallback","Preloader","path","render","component","style","position","top","textAlign","width","CircularProgress","friends","name","friendsReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogPage","dialogReducer","sideBarPage","usersPage","usersReducer","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","window","ReactDOM","basename","process","document","getElementById","module","exports","ADD_POST","likeCount","profile","status","addPost","posts","setStatus","GetProfile","userId","usersAPI","getProfile","getProfileStatus","profileAPI","getStatus","updateProfileStatus","updateStatus","newPost","filter","el","preloader","SEND_MESSAGE","users","sendMessage","dialog","objectHelper","items","itemId","newObjProp","map","pageCount","totalUsersCount","currentPage","isFollowing","follow","unfollow","setCurrentPage","pageNumber","setToggleFollowing","getUser","getUsers","totalCount","followUnfollow","apiMethod","actionCreator","FollowFriend","FollowFriends","bind","UnFollowFriend","UnFollowFriends","followed","instance","axios","create","baseURL","withCredentials","headers","get","then","console","warn","post","delete","put"],"mappings":"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","file":"static/js/main.ee5047ad.chunk.js","sourcesContent":["import {Dispatch} from \"redux\";\r\nimport {authAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\ntype ActionsTypesF =\r\n    ReturnType<typeof setAuthUserData> |\r\n    ReturnType<typeof setToggleFetching>\r\n\r\nexport type setUserDataType = {\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean;\r\n}\r\nexport type setToggleFetching = {\r\n    type: 'SET-TOGGLE-FETCHING'\r\n    isFetching: boolean\r\n}\r\nexport type setUserDataTypeAT = {\r\n    type: 'SET-USER-DATA'\r\n    data: setUserDataType\r\n}\r\n\r\nexport type InitialStateType = {\r\n    data: setUserDataType\r\n    isFetching: boolean;\r\n    resultCode: number;\r\n    messages: string[];\r\n}\r\nlet initialState: InitialStateType = {\r\n    data: {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth: false\r\n    },\r\n    isFetching: false,\r\n    resultCode: 0,\r\n    messages: ['']\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsTypesF): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.data\r\n            }\r\n        case \"SET-TOGGLE-FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean): setUserDataTypeAT => {\r\n    return {\r\n        type: 'SET-USER-DATA',\r\n        data: {id, email, login, isAuth}\r\n    } as const\r\n}\r\nexport const setToggleFetching = (isFetching: boolean): setToggleFetching => {\r\n    return {\r\n        type: \"SET-TOGGLE-FETCHING\",\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport const AuthMe = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        const response = await authAPI.getAuthMe()\r\n        dispatch(setToggleFetching(false))\r\n        if (response.resultCode === 0) {\r\n            let {id, login, email} = response.data\r\n            dispatch(setAuthUserData(id, login, email, true))\r\n            dispatch(setToggleFetching(true))\r\n        }\r\n    }\r\n}\r\nexport const AuthLogin = (email: string, password: string, rememberMe: boolean) => {\r\n    return async (dispatch: any) => {\r\n        const response = await authAPI.getLogin(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(AuthMe())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n            dispatch(stopSubmit('login',\r\n                {_error: message}))\r\n        }\r\n    }\r\n}\r\nexport const AuthLogOut = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        const response = await authAPI.getLogOut()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n// export const Captcha = (url:string) => {\r\n//     return (dispatch:Dispatch) => {\r\n//         authAPI.getCaptcha(url).then(response => {\r\n//             response.data.getCaptcha('')\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\nexport default authReducer","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css';\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={`${s.item}`}>\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\n            </div>\n            <div className={s.itemFriends}>\n                <NavLink to='/friends' activeClassName={s.activeLink}>Friends</NavLink>\n            </div>\n            <span className={s.itemFriends}>\n                <NavLink to='/Abay' activeClassName={s.activeLink}> Aboy </NavLink>\n            </span>\n\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react'\r\nimport s from './News.module.css'\r\nfunction News(props:any){\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News","import React from 'react'\r\nfunction Music(props:any){\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from 'react'\r\nimport s from './Settings.module.css'\r\nfunction Settings(props:any){\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from 'react'\r\nfunction Friends(){\r\n    return (\r\n        <div>\r\n            Friends\r\n        </div>\r\n    )\r\n}\r\nexport default Friends","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Header.module.css';\nimport {HeaderContainerTypeProps} from \"./HeaderContainer\";\n\nfunction Header(props:HeaderContainerTypeProps) {\n  return (\n    <header className={s.header}>\n      <img src=\"https://www.freelogodesign.org/Content/img/logo-ex-7.png\" alt=\"\"/>\n        <div className={s.loginBlock}>\n            {props.isAuth ?\n                <div>{props.login} - <button onClick={props.AuthLogOut}> Log out</button></div>\n          : <NavLink to={'/login'}>Login</NavLink>}\n        </div>\n    </header>\n  );\n}\nexport default Header;\n","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    AuthLogOut,\r\n    AuthMe,\r\n    setAuthUserData,\r\n    setToggleFetching,\r\n    setUserDataType\r\n} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype mapDispatchToProps = {\r\n    setAuthUserData: (data: setUserDataType) => void;\r\n    setToggleFetching: (isFetching: boolean) => void;\r\n    AuthMe:() => void;\r\n    AuthLogOut:() => number;\r\n}\r\nexport type HeaderContainerTypeProps = mapStateToPropsType & mapDispatchToProps\r\nclass HeaderContainer extends React.Component<any, any>{\r\n    componentDidMount() {\r\n        this.props.AuthMe()\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}\r\n                       login={this.props.login}\r\n                       isAuth={this.props.isAuth}\r\n                       setAuthUserData={this.props.setAuthUserData}\r\n                       setToggleFetching={this.props.setToggleFetching}\r\n                       AuthMe={this.props.AuthMe}\r\n                       AuthLogOut={this.props.AuthLogOut}\r\n        />\r\n    }\r\n}\r\nlet mapStateToProps = (state:AppStateType): mapStateToPropsType => {\r\n    return{\r\n        isAuth: state.auth.data.isAuth,\r\n        login: state.auth.data.login,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{setAuthUserData,setToggleFetching,AuthMe,AuthLogOut}) (HeaderContainer)","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {setAuthUserData} from \"./auth-reducer\";\r\n\r\ntype initialStateType = {\r\n    isInitialized: boolean\r\n}\r\ntype ActionType = ReturnType<typeof isInitializedAc>\r\nconst initialState: initialStateType = {\r\n    isInitialized: false\r\n}\r\nexport const appReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case'IS-INITIALIZED': {\r\n            return {...state, isInitialized: action.isInitialized}\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport const isInitializedAc = (isInitialized: boolean) => ({type: 'IS-INITIALIZED', isInitialized} as const)\r\nexport const initializeAppTC = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        const res = await authAPI.getAuthMe()\r\n        if (res.resultCode === 0) {\r\n            let {id, login, email} = res.data\r\n            dispatch(setAuthUserData(id, login, email, true))\r\n            dispatch(isInitializedAc(true))\r\n        } else {\r\n        }\r\n    } catch (err) {\r\n\r\n    }\r\n}\r\nexport default appReducer;","import React, {useEffect} from 'react';\nimport Navbar from './components/Navbar/Navbar'\nimport './App.css';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport Friends from \"./components/Friends/Friends\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// import UsersContainer from \"./components/Users/UsersContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n// import LoginForm from \"./components/Login/LoginForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {initializeAppTC} from \"./redux/app-reducer\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nconst DialogsContainer = React.lazy(()=> import(\"./components/Dialogs/DialogsContainer\"))\nconst UsersContainer = React.lazy(()=> import(\"./components/Users/UsersContainer\"))\nconst ProfileContainer = React.lazy(()=> import(\"./components/Profile/ProfileContainer\"))\nconst LoginForm = React.lazy(()=> import(\"./components/Login/LoginForm\"))\n\nfunction App() {\n    const dispatch = useDispatch()\n    const isLogged = useSelector<AppStateType, boolean>(state => state.appPage.isInitialized)\n\n    useEffect(() => {\n        dispatch(initializeAppTC())\n    },[])\n\n    if (!isLogged) {\n        return <div\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\n            <CircularProgress/>\n        </div>\n    }\n\n    return (\n\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <React.Suspense fallback={<Preloader/>}>\n                    <Route path='/dialogs' render={() => {\n                        return <DialogsContainer/>\n                    }}/>\n                    <Route path='/profile/:userId?' render={() => {\n                       return <ProfileContainer/>\n                    }}/>\n                    <Route path='/users' render={() => {\n                        return <UsersContainer/>\n                    }}/>\n                    <Route path='/login' render={() => {\n                        return <LoginForm/>\n                    }}/>\n                    </React.Suspense>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/friends' render={() => <Friends/>}/>\n                </div>\n            </div>\n    );\n}\n\nexport default App;\n","type ActionsTypesF = {\r\n\r\n}\r\ntype sidebarType = {\r\n    id: number;\r\n    name: string;\r\n}\r\nexport type InitialStateType = {\r\n    friends: sidebarType[]\r\n}\r\nlet initialState: InitialStateType = {\r\n    friends: [\r\n        {id: 1, name: 'Abay'},\r\n        {id: 2, name: 'Karik'}\r\n    ]\r\n}\r\n\r\nexport const friendsReducer = (state:InitialStateType = initialState, action:ActionsTypesF): InitialStateType => {\r\n\r\n    return state\r\n}\r\nexport default friendsReducer","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\ndeclare global {\r\n    interface Window {store: any}\r\n}\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogReducer,\r\n    sideBarPage: friendsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    appPage:appReducer,\r\n})\r\n\r\nexport type AppStateType =ReturnType<typeof rootReducer>\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\r\nwindow.store = window.store || {}\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3kPns\",\"loginBlock\":\"Header_loginBlock__2AcFW\"};","import {Dispatch} from \"redux\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\ntype ActionsTypesF =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof setProfile>|\r\n    ReturnType<typeof setStatus>|\r\n    ReturnType<typeof deletePost>\r\nexport const ADD_POST = 'ADD-POST'\r\n\r\nexport type messageType = {\r\n    message: string;\r\n    likeCount: number;\r\n    id: number;\r\n}\r\n\r\ntype ProfilePhotoType = {\r\n    small:string\r\n    large:string\r\n}\r\ntype addPostType = {\r\n    type: 'ADD-POST'\r\n    posts:string\r\n}\r\ntype setProfile = {\r\n    type: 'SET-PROFILE'\r\n    profile:ProfileType\r\n}\r\ntype setStatus = {\r\n    type: 'SET-STATUS'\r\n    status: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    userId: number;\r\n    lookingForAJob: boolean;\r\n    lookingForAJobDescription: string;\r\n    fullName: string;\r\n    contacts: {\r\n        github:string;\r\n        vk: string;\r\n        facebook: string;\r\n        instagram: string;\r\n        twitter: string;\r\n        website:string;\r\n        youtube: string;\r\n        mainLink: string;\r\n    }\r\n    photos:ProfilePhotoType\r\n}\r\n\r\nexport type InitialStateType = {\r\n    message: messageType[];\r\n    profile: ProfileType | null;\r\n    status:string;\r\n}\r\n\r\nlet initialState : InitialStateType = {\r\n    message: [\r\n        {id: 1, message: 'Hi, how are you?', likeCount: 22},\r\n        {id: 2, message: 'It is my first post', likeCount: 11},\r\n\r\n    ]as messageType[] ,\r\n    profile: null,\r\n    status:''\r\n}\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsTypesF): InitialStateType => {\r\n    switch (action.type){\r\n        case ADD_POST:{\r\n            const newPost: messageType = {\r\n                id: 3,\r\n                message: action.posts,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                message: [...state.message, newPost],\r\n            };\r\n        }\r\n        case \"SET-PROFILE\":\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case \"SET-STATUS\":\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        case \"DEL-POST\":\r\n            return {\r\n                ...state, message:state.message.filter(el=>el.id !== action.id)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPost = (posts:string):addPostType => {\r\n    return {\r\n        type: ADD_POST,\r\n        posts\r\n    } as const\r\n}\r\nexport const setProfile = (profile:ProfileType):setProfile => {\r\n    return {\r\n        type: 'SET-PROFILE',\r\n        profile\r\n    } as const\r\n}\r\nexport const setStatus = (status:string):setStatus => {\r\n    return{\r\n        type: 'SET-STATUS',\r\n        status\r\n    } as const\r\n}\r\nexport const deletePost = (id:number) => {\r\n    return{\r\n        type: 'DEL-POST',\r\n        id\r\n    } as const\r\n}\r\nexport const GetProfile=(userId:number)=>{\r\n    return async (dispatch:Dispatch) =>{\r\n        const response = await usersAPI.getProfile(userId)\r\n           dispatch(setProfile(response.data))\r\n    }\r\n}\r\nexport const getProfileStatus = (userId:number) => {\r\n    return async (dispatch:Dispatch) => {\r\n        const response = await profileAPI.getStatus(userId)\r\n            dispatch(setStatus(response.data))\r\n    }\r\n}\r\nexport const updateProfileStatus = (status:string) => {\r\n    return async (dispatch:Dispatch) => {\r\n        const response = await profileAPI.updateStatus(status)\r\n            if(response.data.resultCode===0){\r\n                dispatch(setStatus(status))\r\n            }\r\n    }\r\n}\r\nexport default profileReducer","export default __webpack_public_path__ + \"static/media/Iphone-spinner-2.d3fbaf2b.gif\";","import React from \"react\";\r\n\r\nimport preloader from './../../../Pics/Iphone-spinner-2.gif'\r\n\r\n\r\nconst Preloader = () =>{\r\n    return <div>\r\n        <img src={preloader} alt=\"\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","type ActionsTypesF = ReturnType<typeof sendMessage>\r\n\r\nexport const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nexport type messagesType = {\r\n    id: number;\r\n    messages: string;\r\n}\r\nexport type userType = {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\n\r\nexport type InitialStateType = {\r\n    users: userType[]\r\n    messages: messagesType[]\r\n}\r\nlet initialState: InitialStateType = {\r\n    users: [\r\n        {id: '1', name: 'Damir'},\r\n        {id: '2', name: 'Abay'},\r\n        {id: '3', name: 'Kyama'},\r\n        {id: '4', name: 'Kaidar'},\r\n        {id: '5', name: 'Aday'},\r\n\r\n    ] as userType[],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'What\\'s up?'},\r\n        {id: 3, messages: 'How\\'s it going?'},\r\n\r\n    ] as messagesType[]\r\n}\r\n\r\nexport const dialogReducer = (state: InitialStateType = initialState, action: ActionsTypesF):InitialStateType => {\r\n    switch (action.type){\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id:6, messages: action.dialog} ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const sendMessage = (dialog:string) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        dialog\r\n    } as const\r\n\r\n}\r\n\r\nexport default dialogReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2LvmE\",\"item\":\"Navbar_item__3Z4YA\",\"activeLink\":\"Navbar_activeLink__E3EjW\",\"itemFriends\":\"Navbar_itemFriends__ukrFy\"};","import {UsersType} from \"../../redux/users-reducer\";\r\n\r\nexport const objectHelper = (items: UsersType[],itemId:number, newObjProp: { followed: boolean }) => {\r\n    return  items.map(el => el.id === itemId ? {...el, ...newObjProp} : el)\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {objectHelper} from \"../components/utils/helper\";\r\n\r\ntype ActionsTypesF =\r\n    ReturnType<typeof follow> |\r\n    ReturnType<typeof unfollow> |\r\n    ReturnType<typeof setUser> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof setToggleFetching> |\r\n    ReturnType<typeof setToggleFollowing>\r\n\r\nexport type UsersPhotoType = {\r\n    small: string;\r\n    large: string;\r\n}\r\n\r\nexport type UsersType = {\r\n    id: number;\r\n    photoUrl: string\r\n    name: string;\r\n    status: string\r\n    followed: boolean\r\n    photos: UsersPhotoType;\r\n}\r\nexport type InitialStateType = {\r\n    users: UsersType[]\r\n    pageCount: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    isFollowing: number[]\r\n}\r\nexport type followAT = {\r\n    type: 'FOLLOW'\r\n    userId: number\r\n}\r\nexport type unfollowAT = {\r\n    type: 'UNFOLLOW'\r\n    userId: number\r\n}\r\nexport type followUnfollow = followAT | unfollowAT\r\nexport type setUserAT = {\r\n    type: 'SET-USERS'\r\n    users: UsersType[]\r\n}\r\nexport type setPageAT = {\r\n    type: 'SET-PAGE'\r\n    pageNumber: number\r\n}\r\nexport type setTotalUsersCountAT = {\r\n    type: 'SET-TOTAL-USERS'\r\n    totalUsersCount: number\r\n}\r\nexport type setToggleFetching = {\r\n    type: 'SET-TOGGLE-FETCHING'\r\n    isFetching: boolean\r\n}\r\nexport type setToggleFollowing = {\r\n    type: 'SET-TOGGLE-FOLLOWING'\r\n    id: number\r\n    isFetching: boolean;\r\n}\r\nlet initialState: InitialStateType = {\r\n    users: [] as UsersType[],\r\n    pageCount: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowing: []\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypesF): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: objectHelper(state.users, action.userId,{followed:true})\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: objectHelper(state.users, action.userId,{followed:false})\r\n            }\r\n        case \"SET-USERS\":\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case 'SET-PAGE':\r\n            return {\r\n                ...state, currentPage: action.pageNumber\r\n            }\r\n        case \"SET-TOTAL-USERS\":\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n        case \"SET-TOGGLE-FETCHING\":\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case \"SET-TOGGLE-FOLLOWING\":\r\n            return {\r\n                ...state,\r\n                isFollowing: action.isFetching ? [...state.isFollowing, action.id] :\r\n                    state.isFollowing.filter(el => el != action.id)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const follow = (userId: number): followAT => {\r\n    return {\r\n        type: 'FOLLOW',\r\n        userId\r\n    } as const\r\n}\r\nexport const unfollow = (userId: number): unfollowAT => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userId\r\n    } as const\r\n}\r\nexport const setUser = (users: UsersType[]): setUserAT => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        users\r\n    } as const\r\n}\r\nexport const setCurrentPage = (pageNumber: number): setPageAT => {\r\n    return {\r\n        type: 'SET-PAGE',\r\n        pageNumber\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number): setTotalUsersCountAT => {\r\n    return {\r\n        type: 'SET-TOTAL-USERS',\r\n        totalUsersCount\r\n    } as const\r\n}\r\nexport const setToggleFetching = (isFetching: boolean): setToggleFetching => {\r\n    return {\r\n        type: \"SET-TOGGLE-FETCHING\",\r\n        isFetching\r\n    } as const\r\n}\r\nexport const setToggleFollowing = (isFetching: boolean, id: number): setToggleFollowing => {\r\n    return {\r\n        type: 'SET-TOGGLE-FOLLOWING',\r\n        id,\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport const getUser = (currentPage: number, pageCount: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(setToggleFetching(true));\r\n            dispatch(setCurrentPage(currentPage))\r\n            const response = await usersAPI.getUsers(currentPage, pageCount)\r\n            dispatch(setToggleFetching(false))\r\n            dispatch(setUser(response.items))\r\n            dispatch(setTotalUsersCount(response.totalCount))\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst followUnfollow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: (userId: number) => followUnfollow) => {\r\n    dispatch(setToggleFollowing(true, userId))\r\n    const response = await apiMethod(userId)\r\n    if (response.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setToggleFollowing(false, userId))\r\n}\r\n\r\nexport const FollowFriend = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            await followUnfollow(dispatch, userId, usersAPI.FollowFriends.bind(usersAPI), follow)\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport const UnFollowFriend = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            await followUnfollow(dispatch, userId, usersAPI.UnFollowFriends.bind(usersAPI), unfollow)\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n}\r\nexport default usersReducer","import axios from \"axios\";\r\nimport {ProfileType} from \"../redux/profile-reducer\";\r\nimport {UsersType} from \"../redux/users-reducer\";\r\nimport {setUserDataType} from \"../redux/auth-reducer\";\r\n\r\ntype CommonResponseType<T> = {\r\n    data:T;\r\n    resultCode:number;\r\n    messages:string[];\r\n    fieldsErrors:string[];\r\n\r\n}\r\n\r\nexport type GetUsersType = {\r\n    error: string;\r\n    totalCount: number;\r\n    items: UsersType[]\r\n}\r\n\r\ntype GetAuthType = {\r\n    data:setUserDataType\r\n    resultCode: number;\r\n    messages: string[];\r\n    fieldsErrors: string[];\r\n}\r\ntype PostAuthType = {\r\n    email: string;\r\n    password:string;\r\n    rememberMe: boolean;\r\n    captcha:boolean;\r\n}\r\ntype PostAuthLoginType = {\r\n    resultCode: string;\r\n    messages: string[];\r\n    fieldsError: string[];\r\n    data: PostAuthType\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials:true,\r\n    headers:{\r\n        'API-KEY': '1eaa5d66-d310-487c-a1d0-2fd59af6c2de'\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers (currentPage:number,pageCount:number) {\r\n        return  instance.get<GetUsersType>(`users?page=${currentPage}&count=${pageCount}`).then(response=> {\r\n            return response.data\r\n        })\r\n    },\r\n    getProfile (userId:number)  {\r\n        console.warn('Obsolete method. Please use profileApi object.')\r\n        return profileAPI.getProfile(userId)\r\n   },\r\n\r\n    FollowFriends(id:number){\r\n        return instance.post<CommonResponseType<{}>>(`follow/${id}`).then(response=>response.data)\r\n    },\r\n    UnFollowFriends(id:number){\r\n        return instance.delete<CommonResponseType<{}>>(`follow/${id}`).then(response=>response.data)\r\n    }\r\n}\r\nexport const authAPI = {\r\n    getAuthMe (){\r\n        return instance.get<GetAuthType>(`auth/me`).then(response=>response.data)\r\n    },\r\n    getLogin(email:string, password:string,rememberMe:boolean){\r\n        return instance.post<CommonResponseType<{ data: PostAuthLoginType }>>('auth/login', {email, password, rememberMe});\r\n    },\r\n    getLogOut(){\r\n        return instance.delete<CommonResponseType<{}>>('auth/login')\r\n    },\r\n    // getCaptcha(url:string){\r\n    //     return instance.get('security/get-captcha-url')\r\n    // }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile (userId:number)  {\r\n        return  instance.get<ProfileType>(`profile/`+ userId)\r\n    },\r\n    getStatus (userId:number) {\r\n        return instance.get<any>('profile/status/'+userId)\r\n    },\r\n    updateStatus (status:string) {\r\n        return instance.put<CommonResponseType<{data:string}>>('profile/status',{status})\r\n    }\r\n}"],"sourceRoot":""}