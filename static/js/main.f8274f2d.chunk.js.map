{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItems/DialogItems.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/Post/Post.tsx","redux/ActionTypes.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/store.tsx","redux/profile-reducer.tsx","redux/dialog-reducer.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Friends/Friends.tsx","App.tsx","index.tsx"],"names":["module","exports","Header","className","s","header","src","alt","Navbar","nav","item","active","to","activeClassName","activeLink","itemFriends","Post","props","message","like","ADD_POST","CHANGE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","MyPosts","messageData","map","el","likeCount","postsBLock","value","newPostText","onChange","e","newPost","dispatch","currentTarget","type","onClick","post","posts","ProfileInfo","pic","descriptionBlock","store","_state","profilePage","id","dialogsPage","users","name","messages","newMessageBody","sidebar","friends","_onChange","getState","this","subscribe","observer","action","state","push","profileReducer","body","dialogReducer","Profile","bind","DialogItems","dialog","img","Message","chat","Dialogs","usersData","messagesData","createMessageBody","dialogs","dialogsItems","placeholder","News","Music","Settings","Friends","App","path","render","component","rerenderEntireTree","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f8274f2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3dKQv\",\"item\":\"Navbar_item__2oB40\",\"activeLink\":\"Navbar_activeLink__2zl4L\",\"itemFriends\":\"Navbar_itemFriends__XZia7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2-Sg2\",\"messages\":\"Dialogs_messages__bRGYr\",\"message\":\"Dialogs_message__3VBPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"DialogItems_dialogsItems__1-icN\",\"active\":\"DialogItems_active__1YM7J\",\"img\":\"DialogItems_img__3mM_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBLock\":\"MyPosts_postsBLock__21aF9\",\"posts\":\"MyPosts_posts__1Xedv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Al15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Cx6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2y6KL\"};","import React from 'react';\n\nimport s from './Header.module.css';\n\nfunction Header() {\n  return (\n    <header className={s.header}>\n      <img src=\"https://www.freelogodesign.org/Content/img/logo-ex-7.png\" alt=\"\"/>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css';\n\ntype NavbarType = {\n\n}\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\n            </div>\n            <div className={s.itemFriends}>\n                <NavLink to='/friends' activeClassName={s.activeLink}>Friends</NavLink>\n            </div>\n            <span className={s.itemFriends}>\n                <NavLink to='/Abay' activeClassName={s.activeLink}> Abay </NavLink>\n            </span>\n            <span className={s.itemFriends}>\n                <NavLink to='/Salta' activeClassName={s.activeLink}> Salta </NavLink>\n            </span>\n            <span className={s.itemFriends}>\n                <NavLink to='/Samal' activeClassName={s.activeLink}> Samal </NavLink>\n            </span>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react';\n\nimport s from './Post.module.css';\n\ntype PostPropsType={\n    message: string\n    like:number\n}\n\nfunction Post(props:PostPropsType) {\n    return (\n        <div >\n            <div className={s.item}>\n                <img src=\"https://lwlies.com/wp-content/uploads/2017/04/avatar-2009.jpg\" alt=\"\"/>\n                {props.message}\n                <div>\n                    <span>\n                        {props.like}\n                        <button>like</button>\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;\n","export const ADD_POST = 'ADD-POST'\r\nexport const CHANGE_NEW_POST_TEXT = 'CHANGE-NEW-POST-TEXT'\r\nexport const UPDATE_NEW_MESSAGE_BODY = 'NEW-MESSAGE-BODY'\r\nexport const SEND_MESSAGE = 'SEND-MESSAGE'\r\nexport type ActionsTypesF =\r\n    ReturnType<typeof newMessageBody> | ReturnType<typeof sendMessage>|\r\n    ReturnType<typeof addPostAC> | ReturnType<typeof changeNewTextAC>\r\n\r\nexport const addPostAC = (newPost:string) => {\r\n    return{\r\n        type: ADD_POST,\r\n        post: newPost\r\n    } as const\r\n}\r\nexport const changeNewTextAC = (newPost:string) => {\r\n    return {\r\n        type: CHANGE_NEW_POST_TEXT,\r\n        newPost: newPost\r\n    } as const\r\n}\r\nexport const newMessageBody = (body: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY,\r\n        body: body\r\n    } as const\r\n\r\n}\r\nexport const sendMessage = () => {\r\n    return{\r\n        type: SEND_MESSAGE\r\n    } as const\r\n\r\n}","import React, {ChangeEvent} from 'react';\n\nimport s from './MyPosts.module.css';\nimport Posts from \"./Post/Post\";\nimport { messageType} from \"../../../redux/store\";\nimport {ActionsTypesF, addPostAC, changeNewTextAC} from \"../../../redux/ActionTypes\";\n\n\ntype stateMyPostsType = {\n    message: messageType[]\n    newPostText: string;\n    dispatch: (action: ActionsTypesF) => void;\n}\n\n\nfunction MyPosts(props: stateMyPostsType) {\n\n    let messageData = props.message.map(el => <Posts message={el.message} like={el.likeCount}/>)\n    let addPost = () => {\n        props.dispatch(addPostAC(props.newPostText))\n    }\n    let addPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n\n        props.dispatch(changeNewTextAC(e.currentTarget.value))\n    }\n    return (\n        <div className={s.postsBLock}>\n            <h3>My posts</h3>\n            <div>\n                <div>\n                    <textarea value={props.newPostText} onChange={addPostChange}/>\n                </div>\n                <div>\n                    <button onClick={addPost}>add new post</button>\n                </div>\n            </div>\n            <div className={s.posts}>\n\n                {messageData}\n\n            </div>\n        </div>\n    );\n}\n\nexport default MyPosts;\n","import React from 'react'\r\nimport s from './ProfileInfo.module.css'\r\ntype ProfileInfoType = {\r\n    pic:string;\r\n}\r\n\r\nfunction ProfileInfo(props:ProfileInfoType){\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src={props.pic}/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import {profileReducer} from \"./profile-reducer\";\r\nimport {dialogReducer} from \"./dialog-reducer\";\r\nimport {friendsReducer} from \"./friends-reducer\";\r\nimport {ActionsTypesF} from \"./ActionTypes\";\r\n\r\nexport type messageType = {\r\n    message: string;\r\n    likeCount: number;\r\n    id: number\r\n}\r\nexport type userType = {\r\n    id: string;\r\n    name: string;\r\n}\r\nexport type messagesType = {\r\n    id: number;\r\n    messages: string;\r\n}\r\nexport type sidebarType = {\r\n    id: number;\r\n    name: string;\r\n}\r\nexport type profilePageType = {\r\n    message: messageType[],\r\n    newPostText: string;\r\n}\r\nexport type dialogsPageType = {\r\n    users: userType[]\r\n    messages: messagesType[]\r\n    newMessageBody: string\r\n}\r\nexport type sidebarsType = {\r\n    friends: sidebarType[]\r\n}\r\nexport type stateRootType = {\r\n    profilePage: profilePageType\r\n    dialogsPage: dialogsPageType\r\n    sidebar: sidebarsType\r\n}\r\nexport type StoreType = {\r\n    _state: stateRootType;\r\n    _onChange: () => void;\r\n    subscribe: (observer: () => void) => void;\r\n    getState: () => stateRootType;\r\n    dispatch: (action: ActionsTypesF) => void;\r\n}\r\nlet store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            message: [\r\n                {id: 1, message: 'Hi, how are you?', likeCount: 22},\r\n                {id: 2, message: 'It is my first post', likeCount: 11},\r\n\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        dialogsPage: {\r\n            users: [\r\n                {id: '1', name: 'Damir'},\r\n                {id: '2', name: 'Abay'},\r\n                {id: '3', name: 'Kyama'},\r\n                {id: '4', name: 'Kaidar'},\r\n                {id: '5', name: 'Aday'},\r\n\r\n            ],\r\n            messages: [\r\n                {id: 1, messages: 'Hi'},\r\n                {id: 2, messages: 'What\\'s up?'},\r\n                {id: 3, messages: 'How\\'s it going?'},\r\n\r\n            ],\r\n            newMessageBody: ''\r\n        },\r\n        sidebar: {\r\n            friends: [\r\n                {id: 1, name: 'Abay'},\r\n                {id: 2, name: 'Salta'},\r\n                {id: 3, name: 'Samal'}\r\n            ]\r\n        }\r\n    },\r\n    _onChange() {\r\n\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscribe(observer) {\r\n        this._onChange = observer\r\n    },\r\n    dispatch(action) {\r\n\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n        this._state.dialogsPage = dialogReducer(this._state.dialogsPage, action)\r\n        this._state.sidebar = friendsReducer(this._state.sidebar, action)\r\n        this._onChange()\r\n\r\n    }\r\n}\r\n\r\nexport default store;\r\n\r\n\r\n\r\n","import { messageType, profilePageType} from \"./store\";\r\nimport {ActionsTypesF, ADD_POST, CHANGE_NEW_POST_TEXT} from \"./ActionTypes\";\r\n\r\nexport const profileReducer = (state: profilePageType, action: ActionsTypesF) => {\r\n    switch (action.type){\r\n        case ADD_POST:\r\n            const newPost: messageType = {\r\n                id: 3,\r\n                message: action.post,\r\n                likeCount: 0\r\n            };\r\n            state.message.push(newPost);\r\n            state.newPostText = '';\r\n            return state;\r\n        case CHANGE_NEW_POST_TEXT:\r\n            state.newPostText = action.newPost\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {dialogsPageType} from \"./store\";\r\nimport {ActionsTypesF, SEND_MESSAGE, UPDATE_NEW_MESSAGE_BODY} from \"./ActionTypes\";\r\nexport const dialogReducer = (state: dialogsPageType, action: ActionsTypesF) => {\r\n    switch (action.type){\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            state.newMessageBody = action.body\r\n            return state\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody\r\n            state.newMessageBody = ''\r\n            state.messages.push({id: 6, messages: body})\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport MyPosts from \"./MyPosts/MyPosts\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport store, {messageType} from \"../../redux/store\";\nimport {ActionsTypesF} from \"../../redux/ActionTypes\";\n\ntype stateProfileType = {\n    message: messageType[]\n    newPostText: string;\n    dispatch: (action: ActionsTypesF) => void;\n}\n\nfunction Profile(props: stateProfileType) {\n    return (\n        <div>\n            <ProfileInfo\n                pic={'https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'}/>\n            <MyPosts message={props.message}\n                     newPostText={props.newPostText}\n                     dispatch={store.dispatch.bind(store)}/>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from \"./DialogItems.module.css\";\r\n\r\ntype DialogItemsTypes = {\r\n    name:string\r\n    id:string\r\n}\r\n\r\nfunction DialogItems(props:DialogItemsTypes) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={`${s.dialog} ${s.active}`}>\r\n                <img className={s.img} src=\"https://media.vanityfair.com/photos/5c5325d3cec32271820c6fc1/master/w_1600%2Cc_limit/ava-max-interview.jpg\" alt=\"\"/>\r\n                <NavLink to={'/dialogs/'+props.id}>{props.name}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItems","import React, {ChangeEvent, LegacyRef} from 'react'\r\nimport s from \"./Message.module.css\";\r\n\r\ntype setMessageType = {\r\n    messages: string;\r\n    id: number;\r\n}\r\n\r\nfunction Message(props: setMessageType) {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>\r\n                <div className={s.chat}>\r\n                    {props.messages}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React, {ChangeEvent} from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItems from \"./DialogItems/DialogItems\";\r\nimport Message from \"./Message/Message\";\r\nimport {messagesType, userType} from '../../redux/store'\r\nimport {ActionsTypesF, newMessageBody, sendMessage} from \"../../redux/ActionTypes\";\r\n\r\ntype stateDialogsType = {\r\n    users: userType[]\r\n    messages: messagesType[]\r\n    dispatch: (action: ActionsTypesF) => void;\r\n    newMessageBody:string\r\n}\r\n\r\nfunction Dialogs(props: stateDialogsType) {\r\n\r\n    let usersData = props.users.map(el => <DialogItems\r\n        name={el.name}\r\n        id={el.id}\r\n    />)\r\n    let messagesData = props.messages.map(el => <Message\r\n        messages={el.messages}\r\n        id={el.id}\r\n    />)\r\n    let createMessageBody = props.newMessageBody\r\n    let onNewMessageClick = () => {\r\n        props.dispatch(sendMessage())\r\n    }\r\n    let onSendMessageChange = (e:ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.dispatch(newMessageBody(e.currentTarget.value))\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {usersData}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                <div> {messagesData}</div>\r\n                <div>\r\n                    <div><textarea\r\n                        value={createMessageBody}\r\n                        placeholder={'Enter your message'}\r\n                        onChange={onSendMessageChange}\r\n                    ></textarea>\r\n                    </div>\r\n                    <div> <button onClick={onNewMessageClick}>Send</button> </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport s from './News.module.css'\r\nfunction News(props:any){\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News","import React from 'react'\r\nimport s from './Music.module.css'\r\nfunction Music(props:any){\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from 'react'\r\nimport s from './Settings.module.css'\r\nfunction Settings(props:any){\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from 'react'\r\nimport s from './Friends.module.css'\r\nfunction Friends(props:any){\r\n    return (\r\n        <div>\r\n            Friends\r\n        </div>\r\n    )\r\n}\r\nexport default Friends","import React from 'react';\nimport Header from './components/Header/Header'\nimport Navbar from './components/Navbar/Navbar'\nimport Profile from './components/Profile/Profile'\nimport './App.css';\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport store, {StoreType} from './redux/store'\nimport Friends from \"./components/Friends/Friends\";\n\ntype PropsType = {\n    store: StoreType\n}\n\nconst App: React.FC<PropsType> = (props) => {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <Route path='/dialogs' render={() => <Dialogs users={store._state.dialogsPage.users}\n                                                                  messages={store._state.dialogsPage.messages}\n                                                                  dispatch={store.dispatch.bind(store)}\n                                                                  newMessageBody={store._state.dialogsPage.newMessageBody}\n                    />}/>\n                    <Route path='/profile' render={() => <Profile message={props.store._state.profilePage.message}\n                                                                  dispatch={store.dispatch.bind(store)}\n                                                                  newPostText={props.store._state.profilePage.newPostText}\n\n                    />}/>\n                    <Route path='/news' component={News}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/friends' render={() => <Friends/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/store\";\n\nexport let rerenderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App store={store}\n            />\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n}\nstore.subscribe(rerenderEntireTree)\nrerenderEntireTree();\n"],"sourceRoot":""}