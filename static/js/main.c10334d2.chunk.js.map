{"version":3,"sources":["api/api.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Friends/Friends.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/app-reducer.tsx","App.tsx","redux/friends-reducer.tsx","redux/redux-store.ts","index.tsx","redux/auth-reducer.tsx","components/Header/Header.module.css","redux/profile-reducer.tsx","Pics/Iphone-spinner-2.gif","components/common/Preloader/Preloader.tsx","redux/dialog-reducer.tsx","components/Navbar/Navbar.module.css","components/utils/helper.ts","redux/users-reducer.ts"],"names":["instance","axios","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageCount","get","then","response","data","getProfile","userId","console","warn","profileAPI","FollowFriends","id","post","UnFollowFriends","delete","authAPI","getAuthMe","getLogin","email","password","rememberMe","captcha","getLogOut","getCaptcha","getStatus","updateStatus","status","put","saveProfile","profile","savePhoto","img","formData","FormData","append","Navbar","className","s","nav","item","to","activeClassName","activeLink","itemFriends","News","props","Music","Settings","Friends","Header","header","src","alt","loginBlock","isAuth","login","onClick","AuthLogOut","HeaderContainer","this","AuthMe","setAuthUserData","setToggleFetching","React","Component","connect","state","auth","initialState","isInitialized","appReducer","action","type","DialogsContainer","lazy","UsersContainer","ProfileContainer","LoginForm","App","dispatch","useDispatch","useSelector","appPage","useEffect","a","exact","path","render","Suspense","fallback","Preloader","component","style","position","top","textAlign","width","CircularProgress","friends","name","friendsReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogPage","dialogReducer","sideBarPage","usersPage","usersReducer","authReducer","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","isFetching","resultCode","messages","AuthLogin","Captcha","message","length","stopSubmit","_error","url","module","exports","ADD_POST","likeCount","aboutMe","lookingForAJob","lookingForAJobDescription","fullName","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","photos","large","small","isOwner","error","setToggle","addPost","posts","setStatus","value","setError","GetProfile","getProfileStatus","updateProfileStatus","log","saveUserProfile","getState","Promise","reject","saveUserPhoto","newPost","filter","el","preloader","SEND_MESSAGE","users","sendMessage","dialog","objectHelper","items","itemId","newObjProp","map","totalUsersCount","isFollowing","follow","unfollow","setCurrentPage","pageNumber","setToggleFollowing","getUser","totalCount","followUnfollow","apiMethod","actionCreator","FollowFriend","bind","UnFollowFriend","followed"],"mappings":"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","file":"static/js/main.c10334d2.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {ProfilePhotoType, ProfileType} from \"../redux/profile-reducer\";\r\nimport {UsersType} from \"../redux/users-reducer\";\r\nimport {setUserDataType} from \"../redux/auth-reducer\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials:true,\r\n    headers:{\r\n        'API-KEY': '1eaa5d66-d310-487c-a1d0-2fd59af6c2de'\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers (currentPage:number,pageCount:number) {\r\n        return  instance.get<GetUsersType>(`users?page=${currentPage}&count=${pageCount}`).then(response=> {\r\n            return response.data\r\n        })\r\n    },\r\n    getProfile (userId:number)  {\r\n        console.warn('Obsolete method. Please use profileApi object.')\r\n        return profileAPI.getProfile(userId)\r\n   },\r\n\r\n    FollowFriends(id:number){\r\n        return instance.post<CommonResponseType<{}>>(`follow/${id}`).then(response=>response.data)\r\n    },\r\n    UnFollowFriends(id:number){\r\n        return instance.delete<CommonResponseType<{}>>(`follow/${id}`).then(response=>response.data)\r\n    }\r\n}\r\nexport const authAPI = {\r\n\r\n    getAuthMe (){\r\n        return instance.get<GetAuthType>(`auth/me`).then(response=>response.data)\r\n    },\r\n    getLogin(email:string, password:string,rememberMe:boolean, captcha:string){\r\n        return instance.post<CommonResponseType<{ data: PostAuthLoginType }>>('auth/login', {email, password, rememberMe,captcha});\r\n    },\r\n    getLogOut(){\r\n        return instance.delete<CommonResponseType<{}>>('auth/login')\r\n    },\r\n    getCaptcha(){\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile (userId:number)  {\r\n        return  instance.get<ProfileType>(`profile/`+ userId)\r\n    },\r\n    getStatus (userId:number) {\r\n        return instance.get<any>(`profile/status/${userId}`)\r\n    },\r\n    updateStatus (status:string) {\r\n        return instance.put<CommonResponseType<{data:string}>>('profile/status',{status})\r\n    },\r\n    saveProfile(profile:ProfileType | null){\r\n        return instance.put<CommonResponseType<{ data:ProfilesType }>>(`profile`,profile)\r\n    },\r\n    savePhoto(img: File){\r\n        const formData = new FormData()\r\n        formData.append('image',img)\r\n        return instance.put<CommonResponseType<{photos: ProfilePhotoType }>>(`profile/photo`,formData, {\r\n            headers:{\r\n                'Content-type':'mulitpart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\ntype CommonResponseType<T> = {\r\n    data:T;\r\n    resultCode:number;\r\n    messages:string[];\r\n    fieldsErrors:string[];\r\n\r\n}\r\n\r\ntype ContactsType = {\r\n    github: string;\r\n    vk: string;\r\n    facebook: string;\r\n    instagram: string;\r\n    twitter?: string;\r\n    website?: string;\r\n    youtube?: string;\r\n    mainLink?: string;\r\n}\r\n\r\nexport type ProfilesType = {\r\n    aboutMe:string;\r\n    userId: number;\r\n    lookingForAJob: boolean;\r\n    lookingForAJobDescription: string;\r\n    fullName: string;\r\n    contacts?: ContactsType\r\n\r\n}\r\n\r\nexport type GetUsersType = {\r\n    error: string;\r\n    totalCount: number;\r\n    items: UsersType[]\r\n}\r\n\r\ntype GetAuthType = {\r\n    data:setUserDataType\r\n    resultCode: number;\r\n    messages: string[];\r\n    fieldsErrors: string[];\r\n}\r\ntype PostAuthType = {\r\n    email: string;\r\n    password:string;\r\n    rememberMe: boolean;\r\n    captcha:boolean;\r\n}\r\ntype PostAuthLoginType = {\r\n    resultCode: string;\r\n    messages: string[];\r\n    fieldsError: string[];\r\n    data: PostAuthType\r\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css';\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={`${s.item}`}>\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\n            </div>\n            <div className={s.itemFriends}>\n                <NavLink to='/friends' activeClassName={s.activeLink}>Friends</NavLink>\n            </div>\n            <span className={s.itemFriends}>\n                <NavLink to='/Abay' activeClassName={s.activeLink}> Aboy </NavLink>\n            </span>\n\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React from 'react'\r\nimport s from './News.module.css'\r\nfunction News(props:any){\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News","import React from 'react'\r\nfunction Music(props:any){\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music","import React from 'react'\r\nimport s from './Settings.module.css'\r\nfunction Settings(props:any){\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings","import React from 'react'\r\nfunction Friends(){\r\n    return (\r\n        <div>\r\n            Friends\r\n        </div>\r\n    )\r\n}\r\nexport default Friends","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css';\nimport {HeaderContainerTypeProps} from \"./HeaderContainer\";\n\nfunction Header(props:HeaderContainerTypeProps) {\n  return (\n    <header className={s.header}>\n      <img src=\"https://www.freelogodesign.org/Content/img/logo-ex-7.png\" alt=\"\"/>\n        <div className={s.loginBlock}>\n            {props.isAuth ?\n                <div>{props.login} - <button onClick={props.AuthLogOut}> Log out</button></div>\n          : <NavLink to={'/login'}>Login</NavLink>}\n        </div>\n    </header>\n  );\n}\nexport default Header;\n","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    AuthLogOut,\r\n    AuthMe,\r\n    setAuthUserData,\r\n    setToggleFetching,\r\n    setUserDataType\r\n} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\ntype mapDispatchToProps = {\r\n    setAuthUserData: (data: setUserDataType) => void;\r\n    setToggleFetching: (isFetching: boolean) => void;\r\n    AuthMe:() => void;\r\n    AuthLogOut:() => number;\r\n}\r\nexport type HeaderContainerTypeProps = mapStateToPropsType & mapDispatchToProps\r\nclass HeaderContainer extends React.Component<any, any>{\r\n    componentDidMount() {\r\n        this.props.AuthMe()\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}\r\n                       login={this.props.login}\r\n                       isAuth={this.props.isAuth}\r\n                       setAuthUserData={this.props.setAuthUserData}\r\n                       setToggleFetching={this.props.setToggleFetching}\r\n                       AuthMe={this.props.AuthMe}\r\n                       AuthLogOut={this.props.AuthLogOut}\r\n        />\r\n    }\r\n}\r\nlet mapStateToProps = (state:AppStateType): mapStateToPropsType => {\r\n    return{\r\n        isAuth: state.auth.data.isAuth,\r\n        login: state.auth.data.login,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{setAuthUserData,setToggleFetching,AuthMe,AuthLogOut}) (HeaderContainer)","import {AuthMe} from \"./auth-reducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\ntype initialStateType = {\r\n    isInitialized: boolean\r\n}\r\ntype ActionType = ReturnType<typeof isInitializedAc>\r\nconst initialState: initialStateType = {\r\n    isInitialized: false\r\n}\r\nexport const appReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case'IS-INITIALIZED': {\r\n            return {...state, isInitialized: true}\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport const isInitializedAc = () => ({type: 'IS-INITIALIZED'} as const)\r\nexport const initializeAppTC = () => async (dispatch: ThunkDispatch<any, any, any>) => {\r\n    try {\r\n        await dispatch(AuthMe())\r\n        dispatch(isInitializedAc())\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default appReducer;","import React, {useEffect} from 'react';\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport './App.css';\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Friends from \"./components/Friends/Friends\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n// import UsersContainer from \"./components/Users/UsersContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\n// import LoginForm from \"./components/Login/LoginForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"./redux/redux-store\";\r\nimport {initializeAppTC} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\nconst UsersContainer = React.lazy(() => import(\"./components/Users/UsersContainer\"))\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"))\r\nconst LoginForm = React.lazy(() => import(\"./components/Login/LoginForm\"))\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppStateType, boolean>(state => state.appPage.isInitialized)\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [])\r\n\r\n    if (!isInitialized) {\r\n        return <div\r\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\r\n            <CircularProgress/>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={'app-wrapper-content'}>\r\n                <Switch>\r\n                    <Route exact path='/' render={() => {\r\n                        return <Redirect to={'/profile'}/>\r\n                    }}/>\r\n                    <React.Suspense fallback={<Preloader/>}>\r\n                        <Route path='/dialogs' render={() => {\r\n                            return <DialogsContainer/>\r\n                        }}/>\r\n                        <Route path='/profile/:userId?' render={() => {\r\n                            return <ProfileContainer/>\r\n                        }}/>\r\n                        <Route path='/users' render={() => {\r\n                            return <UsersContainer/>\r\n                        }}/>\r\n                        <Route path='/login' render={() => {\r\n                            return <LoginForm/>\r\n                        }}/>\r\n                        {/*<Route path='*' render={() => {*/}\r\n                        {/*    return <div>404 NOT FOUND</div>*/}\r\n                        {/*}}/>*/}\r\n                    </React.Suspense>\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/music' component={Music}/>\r\n                    <Route path='/settings' component={Settings}/>\r\n                    <Route path='/friends' render={() => <Friends/>}/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","type ActionsTypesF = {\r\n\r\n}\r\ntype sidebarType = {\r\n    id: number;\r\n    name: string;\r\n}\r\nexport type InitialStateType = {\r\n    friends: sidebarType[]\r\n}\r\nlet initialState: InitialStateType = {\r\n    friends: [\r\n        {id: 1, name: 'Abay'},\r\n        {id: 2, name: 'Karik'}\r\n    ]\r\n}\r\n\r\nexport const friendsReducer = (state:InitialStateType = initialState, action:ActionsTypesF): InitialStateType => {\r\n\r\n    return state\r\n}\r\nexport default friendsReducer","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\ndeclare global {\r\n    interface Window {store: any}\r\n}\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogReducer,\r\n    sideBarPage: friendsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    appPage:appReducer,\r\n})\r\n\r\nexport type AppStateType =ReturnType<typeof rootReducer>\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)))\r\nwindow.store = window.store || {}\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\ntype ActionsTypesF =\r\n    ReturnType<typeof setAuthUserData> |\r\n    ReturnType<typeof setToggleFetching> |\r\n    ReturnType<typeof getCaptcha>\r\n\r\nexport type setUserDataType = {\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean;\r\n}\r\nexport type setToggleFetching = {\r\n    type: 'SET-TOGGLE-FETCHING'\r\n    isFetching: boolean\r\n}\r\nexport type setUserDataTypeAT = {\r\n    type: 'SET-USER-DATA'\r\n    data: setUserDataType\r\n}\r\nexport type getCaptchaType = {\r\n    type: 'GET-CAPTCHA'\r\n    url: string\r\n}\r\n\r\nexport type AuthInitialStateType = {\r\n    data: setUserDataType\r\n    isFetching: boolean;\r\n    resultCode: number;\r\n    messages: string[];\r\n    captcha: string;\r\n}\r\nlet initialState: AuthInitialStateType = {\r\n    data: {\r\n        id: null,\r\n        email: null,\r\n        login: null,\r\n        isAuth: false\r\n    },\r\n    isFetching: false,\r\n    resultCode: 0,\r\n    messages: [''],\r\n    captcha: ''\r\n}\r\n\r\nexport const authReducer = (state: AuthInitialStateType = initialState, action: ActionsTypesF): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                data: action.data\r\n            }\r\n        case \"SET-TOGGLE-FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"GET-CAPTCHA\":\r\n            return {\r\n                ...state, captcha: action.url\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean): setUserDataTypeAT => {\r\n    return {\r\n        type: 'SET-USER-DATA',\r\n        data: {id, email, login, isAuth}\r\n    } as const\r\n}\r\nexport const setToggleFetching = (isFetching: boolean): setToggleFetching => {\r\n    return {\r\n        type: \"SET-TOGGLE-FETCHING\",\r\n        isFetching\r\n    } as const\r\n}\r\nexport const getCaptcha = (url: string): getCaptchaType => {\r\n    return {\r\n        type: \"GET-CAPTCHA\",\r\n        url\r\n    } as const\r\n}\r\n\r\nexport const AuthMe = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        const response = await authAPI.getAuthMe()\r\n        dispatch(setToggleFetching(false))\r\n        if (response.resultCode === 0) {\r\n            let {id, login, email} = response.data\r\n            dispatch(setAuthUserData(id, login, email, true))\r\n            dispatch(setToggleFetching(true))\r\n        }\r\n    }\r\n}\r\nexport const AuthLogin = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: ThunkDispatch<any, any, any>) => {\r\n    const response = await authAPI.getLogin(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(AuthMe())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(Captcha())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n            dispatch(stopSubmit('login',\r\n                {_error: message}))\r\n        }\r\n\r\n    }\r\n}\r\nexport const AuthLogOut = () => async (dispatch: Dispatch) => {\r\n    const response = await authAPI.getLogOut()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n        dispatch(setToggleFetching(true))\r\n    }\r\n}\r\nexport const Captcha = () => async (dispatch: Dispatch) => {\r\n    const response = await authAPI.getCaptcha()\r\n    if (response.status === 200) {\r\n        dispatch(getCaptcha(response.data.url))\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3kPns\",\"loginBlock\":\"Header_loginBlock__2AcFW\"};","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\ntype ActionsTypesF =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof setProfile> |\r\n    ReturnType<typeof setStatus> |\r\n    ReturnType<typeof deletePost> |\r\n    ReturnType<typeof isOwner> |\r\n    ReturnType<typeof successSavePhoto> |\r\n    ReturnType<typeof setError>|\r\n    ReturnType<typeof setToggleFetching>\r\nexport const ADD_POST = 'ADD-POST'\r\n\r\nexport type messageType = {\r\n    message: string;\r\n    likeCount: number;\r\n    id: number;\r\n}\r\n\r\nexport type ProfilePhotoType = {\r\n    small: string\r\n    large: string\r\n}\r\ntype isOwnerType = {\r\n    type: 'IS-OWNER'\r\n    value: boolean;\r\n}\r\ntype setToggleFetchingType = {\r\n    type: 'IS-FETCHING'\r\n    value: boolean;\r\n}\r\ntype DelPostType = {\r\n    type: 'DEL-POST'\r\n    id: number;\r\n}\r\ntype addPostType = {\r\n    type: 'ADD-POST'\r\n    posts: string\r\n}\r\ntype setProfile = {\r\n    type: 'SET-PROFILE'\r\n    profile: ProfileType\r\n}\r\ntype setStatus = {\r\n    type: 'SET-STATUS'\r\n    status: string\r\n}\r\ntype IsProfileSetType = {\r\n    type: 'IS-SET'\r\n    isSet: boolean\r\n}\r\ntype savePhotoType = {\r\n    type: 'SAVE-PHOTO'\r\n    photos: ProfilePhotoType;\r\n}\r\ntype setErrorType = {\r\n    type: 'SET-ERROR'\r\n    error: string;\r\n}\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    userId: number;\r\n    lookingForAJob: boolean;\r\n    lookingForAJobDescription: string;\r\n    fullName: string;\r\n    contacts: {\r\n        github: string;\r\n        vk: string;\r\n        facebook: string;\r\n        instagram: string;\r\n        twitter: string;\r\n        website: string;\r\n        youtube: string;\r\n        mainLink: string;\r\n    }\r\n    photos: ProfilePhotoType;\r\n}\r\n\r\nexport type InitialStateType = {\r\n    message: messageType[];\r\n    profile: ProfileType;\r\n    status: string;\r\n    isOwner: boolean;\r\n    error: string;\r\n    setToggle:boolean;\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    message: [\r\n        {id: 1, message: 'Hi, how are you?', likeCount: 22},\r\n        {id: 2, message: 'It is my first post', likeCount: 11},\r\n\r\n    ] as messageType[],\r\n    profile: {\r\n        aboutMe: '',\r\n        userId: 16786,\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: '',\r\n        fullName: 'Uakhit Damir',\r\n        contacts: {\r\n            github: '',\r\n            vk: '',\r\n            facebook: '',\r\n            instagram: 'damir.gst',\r\n            twitter: '',\r\n            website: '',\r\n            youtube: '',\r\n            mainLink: '',\r\n        },\r\n        photos: {\r\n            large: '',\r\n            small: ''\r\n        }\r\n    },\r\n    isOwner: false,\r\n    status: '',\r\n    error: '',\r\n    setToggle:false\r\n}\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsTypesF): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            const newPost: messageType = {\r\n                id: 3,\r\n                message: action.posts,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                message: [...state.message, newPost],\r\n            };\r\n        }\r\n        case \"SET-PROFILE\":\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case \"SET-STATUS\":\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        case \"DEL-POST\":\r\n            return {\r\n                ...state, message: state.message.filter(el => el.id !== action.id)\r\n            }\r\n        case \"IS-OWNER\":\r\n            return {\r\n                ...state, isOwner: action.value\r\n            }\r\n        case \"SAVE-PHOTO\":\r\n            debugger\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            }\r\n        case \"SET-ERROR\":\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        case \"IS-FETCHING\":\r\n            return {\r\n                ...state, setToggle:action.value\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPost = (posts: string): addPostType => {\r\n    return {\r\n        type: ADD_POST,\r\n        posts\r\n    } as const\r\n}\r\nexport const setProfile = (profile: ProfileType): setProfile => {\r\n    return {\r\n        type: 'SET-PROFILE',\r\n        profile\r\n    } as const\r\n}\r\nexport const setStatus = (status: string): setStatus => {\r\n    return {\r\n        type: 'SET-STATUS',\r\n        status\r\n    } as const\r\n}\r\nexport const deletePost = (id: number): DelPostType => {\r\n    return {\r\n        type: 'DEL-POST',\r\n        id\r\n    } as const\r\n}\r\nexport const setToggleFetching = (value: boolean): setToggleFetchingType => {\r\n    return {\r\n        type: 'IS-FETCHING',\r\n        value\r\n    } as const\r\n}\r\nexport const isOwner = (value: boolean): isOwnerType => {\r\n    return {\r\n        type: 'IS-OWNER',\r\n        value\r\n    } as const\r\n}\r\nexport const successSavePhoto = (photos: ProfilePhotoType): savePhotoType => {\r\n    return {\r\n        type: 'SAVE-PHOTO',\r\n        photos\r\n    } as const\r\n}\r\nexport const setError = (error: string): setErrorType => {\r\n    return {\r\n        type: 'SET-ERROR',\r\n        error\r\n    } as const\r\n}\r\n\r\nexport const GetProfile = (userId: number) => {\r\n    return async (dispatch: ThunkDispatch<any, any, any>) => {\r\n        dispatch(setToggleFetching(false))\r\n        try {\r\n            const response = await profileAPI.getProfile(userId)\r\n            dispatch(setProfile(response.data))\r\n            dispatch(setToggleFetching(true))\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n}\r\nexport const getProfileStatus = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        const response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data))\r\n    }\r\n}\r\nexport const updateProfileStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    } else {\r\n        console.log(response.data.messages[0])\r\n    }\r\n}\r\nexport const saveUserProfile = (profile: ProfileType) => async (dispatch: ThunkDispatch<any, any, any>, getState: () => AppStateType) => {\r\n\r\n    let userId = getState().auth.data.id\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        if (userId != null) {\r\n            await dispatch(GetProfile(userId))\r\n        }\r\n    } else {\r\n        dispatch(setError(response.data.messages[0]))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\nexport const saveUserPhoto = (img: File) => async (dispatch: Dispatch) => {\r\n\r\n    const response = await profileAPI.savePhoto(img)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(successSavePhoto(response.data.data.photos))\r\n    }\r\n}\r\nexport default profileReducer","export default __webpack_public_path__ + \"static/media/Iphone-spinner-2.d3fbaf2b.gif\";","import React from \"react\";\r\n\r\nimport preloader from './../../../Pics/Iphone-spinner-2.gif'\r\n\r\n\r\nconst Preloader = () =>{\r\n    return <div>\r\n        <img src={preloader} alt=\"\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","type ActionsTypesF = ReturnType<typeof sendMessage>\r\n\r\nexport const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\nexport type messagesType = {\r\n    id: number;\r\n    messages: string;\r\n}\r\nexport type userType = {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\n\r\nexport type InitialStateType = {\r\n    users: userType[]\r\n    messages: messagesType[]\r\n}\r\nlet initialState: InitialStateType = {\r\n    users: [\r\n        {id: '1', name: 'Damir'},\r\n        {id: '2', name: 'Abay'},\r\n        {id: '3', name: 'Kyama'},\r\n        {id: '4', name: 'Kaidar'},\r\n        {id: '5', name: 'Aday'},\r\n\r\n    ] as userType[],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'What\\'s up?'},\r\n        {id: 3, messages: 'How\\'s it going?'},\r\n\r\n    ] as messagesType[]\r\n}\r\n\r\nexport const dialogReducer = (state: InitialStateType = initialState, action: ActionsTypesF):InitialStateType => {\r\n    switch (action.type){\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id:6, messages: action.dialog} ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const sendMessage = (dialog:string) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        dialog\r\n    } as const\r\n\r\n}\r\n\r\nexport default dialogReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2LvmE\",\"item\":\"Navbar_item__3Z4YA\",\"activeLink\":\"Navbar_activeLink__E3EjW\",\"itemFriends\":\"Navbar_itemFriends__ukrFy\"};","import {UsersType} from \"../../redux/users-reducer\";\r\n\r\nexport const objectHelper = (items: UsersType[],itemId:number, newObjProp: { followed: boolean }) => {\r\n    return  items.map(el => el.id === itemId ? {...el, ...newObjProp} : el)\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {objectHelper} from \"../components/utils/helper\";\r\n\r\ntype ActionsTypesF =\r\n    ReturnType<typeof follow> |\r\n    ReturnType<typeof unfollow> |\r\n    ReturnType<typeof setUser> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setTotalUsersCount> |\r\n    ReturnType<typeof setToggleFetching> |\r\n    ReturnType<typeof setToggleFollowing>\r\n\r\nexport type UsersPhotoType = {\r\n    small: string;\r\n    large: string;\r\n}\r\n\r\nexport type UsersType = {\r\n    id: number;\r\n    photoUrl: string\r\n    name: string;\r\n    status: string\r\n    followed: boolean\r\n    photos: UsersPhotoType;\r\n}\r\nexport type InitialStateType = {\r\n    users: UsersType[]\r\n    pageCount: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    isFollowing: number[]\r\n}\r\nexport type followAT = {\r\n    type: 'FOLLOW'\r\n    userId: number\r\n}\r\nexport type unfollowAT = {\r\n    type: 'UNFOLLOW'\r\n    userId: number\r\n}\r\nexport type followUnfollow = followAT | unfollowAT\r\nexport type setUserAT = {\r\n    type: 'SET-USERS'\r\n    users: UsersType[]\r\n}\r\nexport type setPageAT = {\r\n    type: 'SET-PAGE'\r\n    pageNumber: number\r\n}\r\nexport type setTotalUsersCountAT = {\r\n    type: 'SET-TOTAL-USERS'\r\n    totalUsersCount: number\r\n}\r\nexport type setToggleFetching = {\r\n    type: 'SET-TOGGLE-FETCHING'\r\n    isFetching: boolean\r\n}\r\nexport type setToggleFollowing = {\r\n    type: 'SET-TOGGLE-FOLLOWING'\r\n    id: number\r\n    isFetching: boolean;\r\n}\r\nlet initialState: InitialStateType = {\r\n    users: [] as UsersType[],\r\n    pageCount: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowing: []\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypesF): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: objectHelper(state.users, action.userId,{followed:true})\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: objectHelper(state.users, action.userId,{followed:false})\r\n            }\r\n        case \"SET-USERS\":\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case 'SET-PAGE':\r\n            return {\r\n                ...state, currentPage: action.pageNumber\r\n            }\r\n        case \"SET-TOTAL-USERS\":\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n        case \"SET-TOGGLE-FETCHING\":\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case \"SET-TOGGLE-FOLLOWING\":\r\n            return {\r\n                ...state,\r\n                isFollowing: action.isFetching ? [...state.isFollowing, action.id] :\r\n                    state.isFollowing.filter(el => el != action.id)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const follow = (userId: number): followAT => {\r\n    return {\r\n        type: 'FOLLOW',\r\n        userId\r\n    } as const\r\n}\r\nexport const unfollow = (userId: number): unfollowAT => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userId\r\n    } as const\r\n}\r\nexport const setUser = (users: UsersType[]): setUserAT => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        users\r\n    } as const\r\n}\r\nexport const setCurrentPage = (pageNumber: number): setPageAT => {\r\n    return {\r\n        type: 'SET-PAGE',\r\n        pageNumber\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number): setTotalUsersCountAT => {\r\n    return {\r\n        type: 'SET-TOTAL-USERS',\r\n        totalUsersCount\r\n    } as const\r\n}\r\nexport const setToggleFetching = (isFetching: boolean): setToggleFetching => {\r\n    return {\r\n        type: \"SET-TOGGLE-FETCHING\",\r\n        isFetching\r\n    } as const\r\n}\r\nexport const setToggleFollowing = (isFetching: boolean, id: number): setToggleFollowing => {\r\n    return {\r\n        type: 'SET-TOGGLE-FOLLOWING',\r\n        id,\r\n        isFetching\r\n    } as const\r\n}\r\n\r\nexport const getUser = (currentPage: number, pageCount: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            dispatch(setToggleFetching(true));\r\n            dispatch(setCurrentPage(currentPage))\r\n            const response = await usersAPI.getUsers(currentPage, pageCount)\r\n            dispatch(setToggleFetching(false))\r\n            dispatch(setUser(response.items))\r\n            dispatch(setTotalUsersCount(response.totalCount))\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst followUnfollow = async (dispatch: Dispatch, userId: number, apiMethod: any, actionCreator: (userId: number) => followUnfollow) => {\r\n    dispatch(setToggleFollowing(true, userId))\r\n    const response = await apiMethod(userId)\r\n    if (response.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setToggleFollowing(false, userId))\r\n}\r\n\r\nexport const FollowFriend = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            await followUnfollow(dispatch, userId, usersAPI.FollowFriends.bind(usersAPI), follow)\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n}\r\nexport const UnFollowFriend = (userId: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            await followUnfollow(dispatch, userId, usersAPI.UnFollowFriends.bind(usersAPI), unfollow)\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n}\r\nexport default usersReducer"],"sourceRoot":""}